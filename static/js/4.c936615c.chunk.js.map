{"version":3,"sources":["elements/Input/Input.js","elements/formElement/formElement.js","component/changeEmail.js","component/changePassword.js","component/deleteAccount.js","component/accountSettings.js"],"names":["input","_ref","type","checked","onChange","name","value","placeholder","className","disabled","inputs","react_default","a","createElement","concat","Fragment","formElement","_ref$itemName","itemName","_ref$formName","formName","itemFalseName","_ref$formValidation","formValidation","_ref$itemValidation","itemValidation","_ref$itemValue","itemValue","itemOnChange","itemType","_ref$itemPlaceholder","itemPlaceholder","_ref$itemChecked","itemChecked","_ref$disabled","Input","changeEmail","handleOnClickSave","changeEmailVisible","change_email_visible","animationTiming","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","Title","FormButton","buttonName","buttonColor","buttonInline","buttonOnClick","changePassword","handleOnClickSavePassword","changePasswordVisible","change_password_visible","deleteAccount","deleteAccountConfirm","validationDeleteAccount","validated","handleInputOnChange","delete_account_confirm","handleOnClickSaveDeleteAccount","Login","state","formEmail","email","newEmail","password","formPassword","newPassword","newPasswordAgain","formDeleteAccount","validationEmail","validationPassword","e","newForm","Object","objectSpread","_this","updateFormElement","target","checkValidity","setState","handleInputOnChangeEmail","handleInputOnChangePassword","preventDefault","validation","props","authCheckPassword","userEmail","userToken","handleEmailVisible","handlePasswordVisible","handleDeleteAccountVisible","isValid","length","this","test","_this2","_this$state","changePage","signed","react_router","to","modalChangeEmail","Modal","modalError","modalOn","onClickButton","change_email_bool","modalChangePassword","change_password_bool","modalChangeEmailBusy","changeEmailBusy","change_email_busy","modalBadPassword","badPassword","bad_password","formChangeEmail","id","formChangePassword","formEmailsMap","map","item","key","formPasswordsMap","enter","exit","settingsAccountVisible","closePage","onClick","settings_account_visible","component_changeEmail","component_changePassword","component_deleteAccount","nextProps","prevState","newState","Component","connect","errorLogin","userId","dispatch","onAuth","isSignUp","actionTypes","is_error_login","delete_account","onAuth_Reset_Password","change_email","error_reset_password"],"mappings":"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","file":"static/js/4.c936615c.chunk.js","sourcesContent":["import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nconst changeEmail = ({\r\n  inputs,\r\n  handleOnClickSave,\r\n  changeEmailVisible,\r\n  change_email_visible,\r\n  animationTiming\r\n}) => {\r\n  return (\r\n    <CSSTransition\r\n      in={changeEmailVisible}\r\n      timeout={animationTiming}\r\n      mountOnEnter\r\n      unmountOnExit\r\n      classNames=\"animationRight\"\r\n    >\r\n      <div className=\"accountSettings\">\r\n        <Title name=\"ZMIEŃ E-MAIL\" />\r\n        {inputs}\r\n        <div className=\"text-center margin-top-40\">\r\n          <FormButton\r\n            buttonName=\"Powrót\"\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            buttonOnClick={change_email_visible}\r\n          />\r\n          <FormButton\r\n            buttonName=\"Zatwierdź\"\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n            buttonOnClick={handleOnClickSave}\r\n          />\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default changeEmail;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nconst changePassword = ({\r\n  inputs,\r\n  handleOnClickSavePassword,\r\n  changePasswordVisible,\r\n  change_password_visible,\r\n  animationTiming\r\n}) => {\r\n  return (\r\n    <CSSTransition\r\n      in={changePasswordVisible}\r\n      timeout={animationTiming}\r\n      mountOnEnter\r\n      unmountOnExit\r\n      classNames=\"animationRight\"\r\n    >\r\n      <div className=\"accountSettings\">\r\n        <Title name=\"ZMIEŃ HASŁO\" />\r\n        {inputs}\r\n        <div className=\"text-center margin-top-40\">\r\n          <FormButton\r\n            buttonName=\"Powrót\"\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            buttonOnClick={change_password_visible}\r\n          />\r\n          <FormButton\r\n            buttonName=\"Zatwierdź\"\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n            buttonOnClick={handleOnClickSavePassword}\r\n          />\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default changePassword;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nconst deleteAccount = ({\r\n  deleteAccountConfirm,\r\n  validationDeleteAccount,\r\n  validated,\r\n  handleInputOnChange,\r\n  value,\r\n  delete_account_confirm,\r\n  handleOnClickSaveDeleteAccount,\r\n  animationTiming\r\n}) => {\r\n  return (\r\n    <CSSTransition\r\n      in={deleteAccountConfirm}\r\n      timeout={animationTiming}\r\n      mountOnEnter\r\n      unmountOnExit\r\n      classNames=\"animationRight\"\r\n    >\r\n      <div className=\"accountSettings\">\r\n        <Title name=\"USUŃ KONTO\" />\r\n        <div className=\"container\">\r\n          <FormElement\r\n            formName=\"Podaj hasło\"\r\n            itemFalseName=\"Błędne hasło\"\r\n            formValidation={validationDeleteAccount}\r\n            itemValidation={validated}\r\n            itemOnChange={handleInputOnChange}\r\n            itemValue={value}\r\n            itemName=\"password\"\r\n            itemType=\"password\"\r\n            itemPlaceholder=\"\"\r\n            itemChecked={null}\r\n            disabled={false}\r\n          />\r\n        </div>\r\n        <div className=\"text-center margin-top-40\">\r\n          <FormButton\r\n            buttonName=\"Wróć\"\r\n            buttonColor=\"green\"\r\n            buttonInline={true}\r\n            buttonOnClick={delete_account_confirm}\r\n          />\r\n          <FormButton\r\n            buttonName=\"Usuń\"\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            buttonOnClick={\r\n              // this.props.delete_account(this.props.userToken)\r\n              handleOnClickSaveDeleteAccount\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default deleteAccount;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport ChangeEmail from \"./changeEmail\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport ChangePassword from \"./changePassword\";\r\nimport DeleteAccount from \"./deleteAccount\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formEmail: {\r\n      email: {\r\n        value: \"\",\r\n        validated: true\r\n      },\r\n      newEmail: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formPassword: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPassword: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPasswordAgain: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formDeleteAccount: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    validationEmail: false,\r\n    validationPassword: false,\r\n    validationDeleteAccount: false\r\n  };\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (nextProps !== this.props || nextState !== this.state) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.newPassword.value !==\r\n        newState.formPassword.newPasswordAgain.value\r\n      ) {\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n      } else {\r\n        newState.formPassword.newPasswordAgain.validated = true;\r\n      }\r\n    }\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      newState.formPassword.password.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.password.value ===\r\n        newState.formPassword.newPassword.value\r\n      ) {\r\n        newState.formPassword.newPassword.validated = false;\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n        newState.formPassword.password.validated = false;\r\n      } else {\r\n        newState.formPassword.newPassword.validated = true;\r\n        newState.formPassword.password.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\" || name === \"newPassword\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"newPasswordAgain\") {\r\n      isValid =\r\n        this.state.formPassword.newPassword.value === value && value.length >= 6\r\n          ? true\r\n          : false;\r\n    }\r\n\r\n    if (name === \"newEmail\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && this.props.userEmail !== value;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.formDeleteAccount\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formDeleteAccount: newForm,\r\n      validationDeleteAccount: true\r\n    });\r\n  };\r\n\r\n  handleInputOnChangeEmail = e => {\r\n    const newForm = {\r\n      ...this.state.formEmail\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formEmail: newForm\r\n    });\r\n  };\r\n\r\n  handleInputOnChangePassword = e => {\r\n    const newForm = {\r\n      ...this.state.formPassword\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formPassword: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSaveDeleteAccount = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationDeleteAccount ? true : true;\r\n    this.setState({\r\n      validationDeleteAccount: validation\r\n    });\r\n\r\n    if (this.state.formDeleteAccount.password.validated && validation) {\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formDeleteAccount.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationDeleteAccount: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationEmail ? true : true;\r\n    this.setState({\r\n      validationEmail: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formEmail.newEmail.validated &&\r\n      validation &&\r\n      this.state.formEmail.password.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formEmail.password.value,\r\n        this.props.userToken,\r\n        this.state.formEmail.newEmail.value,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.newEmail.value = \"\";\r\n      newForm.newEmail.validated = false;\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationEmail: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSavePassword = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationPassword ? true : true;\r\n    this.setState({\r\n      validationPassword: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formPassword.password.validated &&\r\n      validation &&\r\n      this.state.formPassword.newPassword.validated &&\r\n      this.state.formPassword.newPasswordAgain.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formPassword.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        this.state.formPassword.newPassword.value\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formPassword };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      newForm.newPassword.value = \"\";\r\n      newForm.newPassword.validated = false;\r\n      newForm.newPasswordAgain.value = \"\";\r\n      newForm.newPasswordAgain.validated = false;\r\n      this.setState({\r\n        validationPassword: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEmailVisible = () => {\r\n    this.props.change_email_visible();\r\n    let newForm = { ...this.state.formEmail };\r\n    newForm.newEmail.value = \"\";\r\n    newForm.newEmail.validated = false;\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationEmail: false\r\n    });\r\n  };\r\n\r\n  handlePasswordVisible = () => {\r\n    this.props.change_password_visible();\r\n    let newForm = { ...this.state.formPassword };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    newForm.newPassword.value = \"\";\r\n    newForm.newPassword.validated = false;\r\n    newForm.newPasswordAgain.value = \"\";\r\n    newForm.newPasswordAgain.validated = false;\r\n    this.setState({\r\n      validationPassword: false\r\n    });\r\n  };\r\n\r\n  handleDeleteAccountVisible = () => {\r\n    this.props.delete_account_confirm();\r\n    let newForm = { ...this.state.formDeleteAccount };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationDeleteAccount: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formEmail, formPassword } = this.state;\r\n    const changePage = this.props.signed ? <Redirect to=\"/\" /> : null;\r\n    const modalChangeEmail = this.props.changeEmail ? (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangePassword = this.props.changePassword ? (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Haslo zostało zmienione\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_password_bool(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Haslo zostało zmienione\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_password_bool(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangeEmailBusy = this.props.changeEmailBusy ? (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    );\r\n\r\n    const modalBadPassword = this.props.badPassword ? (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Błędne hasło`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.bad_password(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Błędne hasło`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.bad_password(false)}\r\n      />\r\n    );\r\n\r\n    const formChangeEmail = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualny adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-mail\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.email.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: this.props.userEmail,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: true\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowy adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-maila\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.newEmail.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.newEmail.value,\r\n        itemName: \"newEmail\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.password.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formChangePassword = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualne hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.password.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPassword.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPassword.value,\r\n        itemName: \"newPassword\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPasswordAgain.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPasswordAgain.value,\r\n        itemName: \"newPasswordAgain\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formEmailsMap = formChangeEmail.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n\r\n    const formPasswordsMap = formChangePassword.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n    const animationTiming = {\r\n      enter: 500,\r\n      exit: 400\r\n    };\r\n\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.settingsAccountVisible}\r\n        timeout={animationTiming}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames=\"animationRight\"\r\n      >\r\n        <div className=\"pagePosition\">\r\n          {changePage}\r\n          {modalChangeEmail}\r\n          {modalChangePassword}\r\n          {modalChangeEmailBusy}\r\n          {modalBadPassword}\r\n\r\n          <div className=\"container positionRelative\">\r\n            <ClosePage onClick={this.props.settings_account_visible} />\r\n            <CSSTransition\r\n              in={\r\n                this.props.changeEmailVisible === false &&\r\n                this.props.changePasswordVisible === false &&\r\n                this.props.deleteAccountConfirm === false\r\n              }\r\n              timeout={animationTiming}\r\n              mountOnEnter\r\n              unmountOnExit\r\n              classNames=\"animationLeft\"\r\n            >\r\n              <div className=\"accountSettings\">\r\n                <Title name=\"USTAWIENIA KONTA\" />\r\n                <div className=\"text-center\">\r\n                  <FormButton\r\n                    buttonName=\"Zmień adres e-mail\"\r\n                    buttonColor=\"gray\"\r\n                    buttonInline={true}\r\n                    buttonOnClick={this.props.change_email_visible}\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <FormButton\r\n                    buttonName=\"Zmień hasło\"\r\n                    buttonColor=\"gray\"\r\n                    buttonInline={true}\r\n                    // buttonOnClick={() =>\r\n                    //   this.props.onAuth_Reset_Password(this.props.userEmail)\r\n                    // }\r\n                    buttonOnClick={() =>\r\n                      this.props.change_password_visible(true)\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <FormButton\r\n                    buttonName=\"Usuń konto\"\r\n                    buttonColor=\"red\"\r\n                    buttonInline={true}\r\n                    buttonOnClick={this.props.delete_account_confirm}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CSSTransition>\r\n          </div>\r\n          <ChangeEmail\r\n            inputs={formEmailsMap}\r\n            handleOnClickSave={this.handleOnClickSave}\r\n            changeEmailVisible={this.props.changeEmailVisible}\r\n            change_email_visible={this.handleEmailVisible}\r\n            animationTiming={this.props.animationTiming}\r\n          />\r\n          <ChangePassword\r\n            inputs={formPasswordsMap}\r\n            handleOnClickSavePassword={this.handleOnClickSavePassword}\r\n            changePasswordVisible={this.props.changePasswordVisible}\r\n            change_password_visible={this.handlePasswordVisible}\r\n            animationTiming={this.props.animationTiming}\r\n          />\r\n          <DeleteAccount\r\n            deleteAccountConfirm={this.props.deleteAccountConfirm}\r\n            validationDeleteAccount={this.state.validationDeleteAccount}\r\n            validated={this.state.formDeleteAccount.password.validated}\r\n            handleInputOnChange={this.handleInputOnChange}\r\n            value={this.state.formDeleteAccount.password.value}\r\n            delete_account_confirm={this.handleDeleteAccountVisible}\r\n            handleOnClickSaveDeleteAccount={this.handleOnClickSaveDeleteAccount}\r\n            animationTiming={this.props.animationTiming}\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    signed: state.signed,\r\n    errorLogin: state.errorLogin,\r\n    settingsAccountVisible: state.settingsAccountVisible,\r\n    userEmail: state.userEmail,\r\n    userToken: state.userToken,\r\n    userId: state.userId,\r\n    changeEmailVisible: state.changeEmailVisible,\r\n    deleteAccountConfirm: state.deleteAccountConfirm,\r\n    changeEmail: state.changeEmail,\r\n    changeEmailBusy: state.changeEmailBusy,\r\n    changePasswordVisible: state.changePasswordVisible,\r\n    changePassword: state.changePassword,\r\n    badPassword: state.badPassword,\r\n    animationTiming: state.animationTiming\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    is_error_login: value => dispatch(actionTypes.is_error_login(value)),\r\n    settings_account_visible: () =>\r\n      dispatch(actionTypes.settings_account_visible()),\r\n    delete_account: userToken =>\r\n      dispatch(actionTypes.delete_account(userToken)),\r\n    onAuth_Reset_Password: email =>\r\n      dispatch(actionTypes.onAuth_Reset_Password(email)),\r\n    change_email: (userId, newEmail, email) =>\r\n      dispatch(actionTypes.change_email(userId, newEmail, email)),\r\n    change_email_visible: () => dispatch(actionTypes.change_email_visible()),\r\n    delete_account_confirm: () =>\r\n      dispatch(actionTypes.delete_account_confirm()),\r\n    change_email_bool: value => dispatch(actionTypes.change_email_bool(value)),\r\n    error_reset_password: value =>\r\n      dispatch(actionTypes.error_reset_password(value)),\r\n    change_email_busy: value => dispatch(actionTypes.change_email_busy(value)),\r\n    authCheckPassword: (email, password, userToken, newEmail, newPassword) =>\r\n      dispatch(\r\n        actionTypes.authCheckPassword(\r\n          email,\r\n          password,\r\n          userToken,\r\n          newEmail,\r\n          newPassword\r\n        )\r\n      ),\r\n    change_password_visible: () =>\r\n      dispatch(actionTypes.change_password_visible()),\r\n    change_password_bool: value =>\r\n      dispatch(actionTypes.change_password_bool(value)),\r\n    bad_password: value => dispatch(actionTypes.bad_password(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n"],"sourceRoot":""}