{"version":3,"sources":["elements/Input/Input.js","elements/formElement/formElement.js","component/registration.js"],"names":["input","type","checked","onChange","name","value","placeholder","className","disabled","inputs","formElement","itemName","formName","itemFalseName","formValidation","itemValidation","itemValue","itemOnChange","itemType","itemPlaceholder","itemChecked","Input","Registration","state","form","email","validated","password","passwordSecond","regulations","message","handleInputOnChange","e","newForm","updateFormElement","target","checkValidity","setState","handleOnClickSave","preventDefault","props","registration_validation_change","isSigned","onAuth","nextProps","nextState","this","newPassword","newPasswordSecond","isValid","length","test","changePage","newAccount","to","errorMessage","errorAccount","onClickButton","is_error_account","modalOn","formInputsMap","id","registrationValidation","map","item","key","in","registrationVisible","timeout","animationTiming","mountOnEnter","unmountOnExit","classNames","onClick","registration_visible","buttonName","buttonOnClick","buttonColor","buttonInline","prevState","newState","Component","connect","login","signed","errorNetwork","dispatch","isSignUp","actionTypes","error_network"],"mappings":"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","file":"static/js/6.18d6edc1.chunk.js","sourcesContent":["import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport FormItem from \"../elements/formElement/formElement\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    form: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      passwordSecond: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      regulations: {\r\n        value: false,\r\n        validated: null\r\n      }\r\n    },\r\n    // validation: false,\r\n    message: \"\"\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (newState.form.password.value.length && nextProps.registrationVisible) {\r\n      if (newState.form.password.value !== newState.form.passwordSecond.value) {\r\n        newState.form.passwordSecond.validated = false;\r\n      } else {\r\n        newState.form.passwordSecond.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name, newPassword, newPasswordSecond) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"passwordSecond\") {\r\n      isValid = newPassword === value ? true : false;\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.form\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name,\r\n        newForm.password.value,\r\n        newForm.passwordSecond.value\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      form: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    // this.setState({\r\n    //   validation: true\r\n    // });\r\n    this.props.registration_validation_change(true);\r\n    if (\r\n      this.state.form.email.validated &&\r\n      this.state.form.password.validated &&\r\n      this.state.form.passwordSecond.validated &&\r\n      this.state.form.regulations.validated\r\n    ) {\r\n      this.props.isSigned(false);\r\n      this.props.onAuth(\r\n        this.state.form.email.value,\r\n        this.state.form.password.value,\r\n        true\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.state;\r\n    const changePage = this.props.newAccount ? <Redirect to=\"/\" /> : null;\r\n    const errorMessage = this.props.errorAccount ? (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={true}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={false}\r\n      />\r\n    );\r\n\r\n    const formInputs = [\r\n      {\r\n        id: 1,\r\n        formName: \"Adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny e-mail\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.email.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.email.value,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.password.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz hasło:\",\r\n        itemFalseName: \"Hasłą nie są identyczne\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: this.state.form.passwordSecond\r\n          ? form.passwordSecond.validated\r\n          : this.state.form.passwordSecond.value ===\r\n            this.state.form.password.value,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.passwordSecond.value,\r\n        itemName: \"passwordSecond\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 4,\r\n        formName: \"Regulamin*:\",\r\n        itemFalseName: \"Zaakceptuj regulamin\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.regulations.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: false,\r\n        itemName: \"regulations\",\r\n        itemType: \"checkbox\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: form.regulations.value\r\n      }\r\n    ];\r\n\r\n    const formInputsMap = formInputs.map(item => (\r\n      <FormItem\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n      />\r\n    ));\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.registrationVisible}\r\n        timeout={this.props.animationTiming}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames=\"animationLeft\"\r\n      >\r\n        <div className=\"pagePosition\">\r\n          {changePage}\r\n          {errorMessage}\r\n\r\n          <div className=\"container positionRelative\">\r\n            <ClosePage onClick={this.props.registration_visible} />\r\n            <div className=\"pt-1\">\r\n              <Title name=\"ZAŁÓŻ KONTO\" />\r\n              {formInputsMap}\r\n            </div>\r\n            <div className=\"text-center \">\r\n              <FormButton\r\n                buttonName=\"Utwórz konto\"\r\n                buttonOnClick={this.handleOnClickSave}\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.login,\r\n    signed: state.signed,\r\n    newAccount: state.newAccount,\r\n    errorAccount: state.errorAccount,\r\n    registrationVisible: state.registrationVisible,\r\n    errorNetwork: state.errorNetwork,\r\n    registrationValidation: state.registrationValidation,\r\n    animationTiming: state.animationTiming\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    isSigned: value => dispatch(actionTypes.is_signed(value)),\r\n    is_error_account: value => dispatch(actionTypes.is_error_account(value)),\r\n    registration_visible: () => dispatch(actionTypes.registration_visible()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    registration_validation_change: value =>\r\n      dispatch(actionTypes.registration_validation_change(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Registration);\r\n"],"sourceRoot":""}