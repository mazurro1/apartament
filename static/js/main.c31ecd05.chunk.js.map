{"version":3,"sources":["store/actions.js","store/reducer.js","elements/Title/Title.js","components/aboutUs.js","img/gallery/imagesGallery.js","components/gallery.js","elements/formButton/FormButton.js","components/callendary.js","components/reservation.js","components/contact.js","component/section.js","component/footer.js","component/nav.js","component/header.js","elements/Modal/Modal.js","elements/closePage/closePage.js","elements/Input/Input.js","elements/formElement/formElement.js","component/loginAccount.js","component/resetPassword.js","component/login.js","component/registration.js","elements/Spinner/Spinner.js","component/orders.js","component/changeEmail.js","component/changePassword.js","component/deleteAccount.js","component/accountSettings.js","component/summary.js","App.js","index.js","img/gallery/1.JPG","img/gallery/2.JPG","img/gallery/3.JPG","img/gallery/4.JPG","img/gallery/5.JPG","img/gallery/6.JPG","img/gallery/7.JPG","img/gallery/8.JPG","img/gallery/9.JPG","img/gallery/10.JPG","img/gallery/11.JPG","img/video.mp4"],"names":["log_out","localStorage","removeItem","type","change_email_bool","value","change_email_busy","delete_account_bool","spinner","is_error_login","is_error_account","is_signed","email","is_newAccount","create_user","userToken","userId","userName","error_network","error_reset_password","checkAuthTimeout","experationTime","dispatch","setTimeout","auth","password","isSignUp","authData","returnSecureToken","url","axios","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","idToken","localId","catch","error","request","status","onAuth_Reset_Password","requestType","console","log","message","delete_account","change_email","newEmail","change_password","newPassword","order_accept","save_all_dispatch_array","get_disabled_date","add_new_disabled_data","date","timeDay","timeNight","actualReservation","actualObjectName","disabledDataValue","price","add_new_order","filterArray","filter","item","initialState","signed","newAccount","userEmail","errorLogin","errorAccount","orderVisible","settingsAccountVisible","loginVisible","registrationVisible","menuVisible","errorNetwork","errorNetworkRegistration","resetPasswordVisible","errorResetPassword","changeEmailVisible","changePasswordVisible","registrationValidation","loginValidation","deleteAccountConfirm","deleteAccount","changeEmail","changeEmailBusy","disabledDate","orderAccept","orderValue","objectName","state","action","Object","entries","values","order_value","change_password_visible","delete_account_confirm","login_validation_change","registration_validation_change","reset_password_visible","menu_visible","login_visible","registration_visible","order_visible","settings_account_visible","is_signed_token","index","lastIndexOf","slice","token","change_email_visible","reducer","title","name","className","AboutUs","id","Title","Component","imagesGallery","src","img1","description","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","Gallery","params","effect","grabCoursor","centereSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modyfier","pagination","el","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","allImages","map","key","alt","formButton","buttonName","buttonOnClick","buttonDisabled","buttonColor","buttonInline","width","buttonColorClass","buttonInlineClass","disabled","onClick","style","points","Callendary","actualDate","validation","actualArray","onChange","timeDayNewValue","timeNightNewValue","getDate","getFullYear","getMonth","props","length","setState","renderDisabled","view","dateBool","handleOrder","handleAddTime","e","prevState","this","minDay","maxYear","maxMonth","maxDay","noSelectDayClass","noSelectHourClass","dayDayClass","dayNightClass","toOrder","FormButton","selectTime","minDate","maxDate","activeStartDate","locale","tileDisabled","connect","isSigned","actionTypes","Reservation","Contact","Section","Footer","Nav","buttonsLogin","DropdownButton","variant","alignRight","icon","faCog","Dropdown","Item","Divider","logOut","to","faBars","size","Header","poster","playsInline","autoPlay","muted","loop","img","modal","onClickButton","modalError","modalOn","modalTransformStyle","modalErrorStyle","faTimes","closePage","input","checked","placeholder","inputs","formElement","itemName","formName","itemFalseName","formValidation","itemValidation","itemValue","itemOnChange","itemType","itemPlaceholder","itemChecked","Input","loginAccount","handleResetPassword","handleOnClickSave","resetPassword","resetPasswordValidation","handleInputOnChangePassword","handleOnClickResetPassword","validated","Login","form","handleInputOnChange","newForm","updateFormElement","target","checkValidity","preventDefault","onAuth","nextProps","nextState","isValid","test","changePage","errorMessage","Modal","formInputsMap","login","passwordSecond","regulations","newPasswordSecond","newState","userOrders","prevProps","snapshot","sort","a","b","x","y","mapOrders","scope","get_order","changePassword","handleOnClickSavePassword","validationDeleteAccount","handleOnClickSaveDeleteAccount","formEmail","formPassword","newPasswordAgain","formDeleteAccount","validationEmail","validationPassword","handleInputOnChangeEmail","authCheckPassword","handleEmailVisible","handlePasswordVisible","handleDeleteAccountVisible","modalChangeEmail","modalChangePassword","modalChangeEmailBusy","formChangeEmail","formChangePassword","formEmailsMap","formPasswordsMap","Summary","dayMonth","getDay","timeStartReservation","timeEndReservation","summary","classSummary","bazePrice","weekBazePrice","App","authChechState","Spinner","modalNetwork","modalDeleteAccount","modalNewAccount","path","exact","component","basename","process","Registration","Orders","AccountSettings","React","getItem","users","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c31ecd05.chunk.js","sourcesContent":["/////////////////////////////AUTH///////////////////////////////////\r\nimport * as axios from \"axios\";\r\nexport const IS_SIGNED = \"IS_SIGNED\";\r\nexport const IS_SIGNED_TOKEN = \"IS_SIGNED_TOKEN\";\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const IS_NEWACCOUNT = \"IS_NEWACCOUNT\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const IS_ERROR_LOGIN = \"IS_ERROR_LOGIN\";\r\nexport const IS_ERROR_ACCOUNT = \"IS_ERROR_ACCOUNT\";\r\nexport const RESET_ERROR = \"RESET_ERROR\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const ORDER_VISIBLE = \"ORDER_VISIBLE\";\r\nexport const SETTINGS_ACCOUNT_VISIBLE = \"SETTINGS_ACCOUNT_VISIBLE\";\r\nexport const CHANGE_EMAIL_VISIBLE = \"CHANGE_EMAIL_VISIBLE\";\r\nexport const SPINNER = \"SPINNER\";\r\nexport const LOGIN_VISIBLE = \"LOGIN_VISIBLE\";\r\nexport const REGISTRATION_VISIBLE = \"REGISTRATION_VISIBLE\";\r\nexport const MENU_VISIBLE = \"MENU_VISIBLE\";\r\nexport const ERROR_NETWORK = \"ERROR_NETWORK\";\r\nexport const RESET_PASSWORD_VISIBLE = \"RESET_PASSWORD_VISIBLE\";\r\nexport const ERROR_RESET_PASSWORD = \"ERROR_RESET_PASSWORD\";\r\nexport const REGISTRATION_VALIDATION_CHANGE = \"REGISTRATION_VALIDATION_CHANGE\";\r\nexport const LOGIN_VALIDATION_CHANGE = \"LOGIN_VALIDATION_CHANGE\";\r\nexport const DELETE_ACCOUNT_CONFIRM = \"DELETE_ACCOUNT_CONFIRM\";\r\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\r\nexport const CHANGE_EMAIL = \"CHANGE_EMAIL\";\r\nexport const CHANGE_EMAIL_BUSY = \"CHANGE_EMAIL_BUSY\";\r\nexport const CHANGE_PASSWORD_VISIBLE = \"CHANGE_PASSWORD_VISIBLE\";\r\n/////////////////////////////END AUTH///////////////////////////////////\r\n\r\nexport const SAVE_ALL_DISPATCH_ARRAY = \"SAVE_ALL_DISPATCH_ARRAY\";\r\nexport const ORDER_ACCEPT = \"ORDER_ACCEPT\";\r\nexport const ORDER_VALUE = \"ORDER_VALUE\";\r\n\r\n/////////////////////////////AUTH///////////////////////////////////\r\nexport const log_out = () => {\r\n  localStorage.removeItem(\"token\"); //usuwanie z przeglądarki tokena\r\n  localStorage.removeItem(\"expirationDate\"); //usuwanie z przeglądarki tokena\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: LOG_OUT\r\n  };\r\n};\r\n\r\nexport const delete_account_confirm = () => {\r\n  return {\r\n    type: DELETE_ACCOUNT_CONFIRM\r\n  };\r\n};\r\n\r\nexport const change_password_visible = () => {\r\n  return {\r\n    type: CHANGE_PASSWORD_VISIBLE\r\n  };\r\n};\r\n\r\nexport const change_email_bool = value => {\r\n  return {\r\n    type: CHANGE_EMAIL,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const change_email_busy = value => {\r\n  return {\r\n    type: CHANGE_EMAIL_BUSY,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const delete_account_bool = value => {\r\n  return {\r\n    type: DELETE_ACCOUNT,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const login_validation_change = value => {\r\n  return {\r\n    type: LOGIN_VALIDATION_CHANGE,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const registration_validation_change = value => {\r\n  return {\r\n    type: REGISTRATION_VALIDATION_CHANGE,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const reset_password_visible = () => {\r\n  return {\r\n    type: RESET_PASSWORD_VISIBLE\r\n  };\r\n};\r\n\r\nexport const menu_visible = () => {\r\n  return {\r\n    type: MENU_VISIBLE\r\n  };\r\n};\r\n\r\nexport const login_visible = () => {\r\n  return {\r\n    type: LOGIN_VISIBLE\r\n  };\r\n};\r\n\r\nexport const registration_visible = () => {\r\n  return {\r\n    type: REGISTRATION_VISIBLE\r\n  };\r\n};\r\n\r\nexport const spinner = value => {\r\n  return {\r\n    type: SPINNER,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const order_visible = () => {\r\n  return {\r\n    type: ORDER_VISIBLE\r\n  };\r\n};\r\n\r\nexport const settings_account_visible = () => {\r\n  return {\r\n    type: SETTINGS_ACCOUNT_VISIBLE\r\n  };\r\n};\r\n\r\nexport const change_email_visible = () => {\r\n  return {\r\n    type: CHANGE_EMAIL_VISIBLE\r\n  };\r\n};\r\n\r\nexport const is_error_login = value => {\r\n  return {\r\n    type: IS_ERROR_LOGIN,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const is_error_account = value => {\r\n  return {\r\n    type: IS_ERROR_ACCOUNT,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const is_signed_token = (token, userId, email) => {\r\n  return {\r\n    type: IS_SIGNED_TOKEN,\r\n    token: token,\r\n    userId: userId,\r\n    email: email\r\n  };\r\n};\r\n\r\nexport const is_signed = (value, email) => {\r\n  return {\r\n    type: IS_SIGNED,\r\n    value: value,\r\n    email: email\r\n  };\r\n};\r\n\r\nexport const is_newAccount = value => {\r\n  return {\r\n    type: IS_NEWACCOUNT,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const create_user = (userToken, userId, userName) => {\r\n  return {\r\n    type: CREATE_USER,\r\n    userToken: userToken,\r\n    userId: userId,\r\n    userName: userName\r\n  };\r\n};\r\n\r\nexport const error_network = value => {\r\n  return {\r\n    type: ERROR_NETWORK,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const error_reset_password = value => {\r\n  return {\r\n    type: ERROR_RESET_PASSWORD,\r\n    value: value\r\n  };\r\n};\r\n\r\n// export const reset\r\n\r\n////////////////////////////////////////////////////\r\n\r\nexport const checkAuthTimeout = experationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(log_out());\r\n    }, experationTime * 1000);\r\n  };\r\n};\r\nexport const auth = (email, password, isSignUp) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true\r\n    };\r\n    let url = //link, jeżeli uzytkownik chce zrobić konto\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    if (!isSignUp) {\r\n      url = //link jeżeli uzytkownik chce się zalogować\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        // console.log(response);\r\n        dispatch(spinner(false));\r\n        // const expirationDate = 3600 * 1000;\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n          // new Date().getTime() + 300 * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(checkAuthTimeout(response.data.expiresIn)); //przechwytuje nasz token, który powoduje nam zalogowanie przez godzine przez nasza funkcje\r\n        // dispatch(checkAuthTimeout(300));\r\n        if (!isSignUp) {\r\n          dispatch(is_signed(true, email));\r\n          dispatch(is_error_login(false));\r\n          dispatch(login_visible());\r\n        } else {\r\n          dispatch(is_error_account(false));\r\n          dispatch(login_visible());\r\n          dispatch(is_newAccount(true));\r\n        }\r\n        dispatch(\r\n          create_user(\r\n            response.data.idToken,\r\n            response.data.localId,\r\n            response.data.email\r\n          )\r\n        );\r\n      })\r\n      .catch(error => {\r\n        dispatch(error_network(false));\r\n        dispatch(spinner(false));\r\n        if (!isSignUp) {\r\n          dispatch(is_signed(false, null));\r\n          if (error.request.status === 0) {\r\n            dispatch(error_network(true));\r\n          } else {\r\n            dispatch(is_error_login(true));\r\n          }\r\n        } else {\r\n          dispatch(is_newAccount(false));\r\n          if (error.request.status === 0) {\r\n            dispatch(error_network(true));\r\n            // dispatch(error_network_registration(true));\r\n          } else {\r\n            dispatch(is_error_account(true));\r\n          }\r\n        }\r\n        // }\r\n      });\r\n  };\r\n};\r\n\r\nexport const authChechState = () => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(log_out());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(log_out());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n\r\n        const authData = {\r\n          idToken: token\r\n        };\r\n        let url =\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n        axios\r\n          .post(url, authData)\r\n          .then(response => {\r\n            const email = response.data.users[0].email;\r\n            dispatch(is_signed_token(token, userId, email));\r\n            dispatch(spinner(false));\r\n          })\r\n          .catch(error => {\r\n            dispatch(spinner(false));\r\n          });\r\n\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const authCheckPassword = (\r\n  email,\r\n  password,\r\n  userToken,\r\n  newEmail,\r\n  newPassword\r\n) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true\r\n    };\r\n\r\n    const url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n        dispatch(\r\n          create_user(\r\n            response.data.idToken,\r\n            response.data.localId,\r\n            response.data.email\r\n          )\r\n        );\r\n        if (newPassword || newEmail) {\r\n          if (newPassword) {\r\n            dispatch(change_password(response.data.idToken, newPassword));\r\n          } else {\r\n            dispatch(change_email(response.data.idToken, newEmail));\r\n          }\r\n        } else {\r\n          dispatch(delete_account(response.data.idToken));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const onAuth_Reset_Password = email => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n\r\n    const authData = {\r\n      requestType: \"PASSWORD_RESET\",\r\n      email: email\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        dispatch(error_reset_password(true));\r\n        dispatch(spinner(false));\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n        if (error.request.status === 0) {\r\n          dispatch(error_network(true));\r\n        } else {\r\n          dispatch(error_reset_password(false));\r\n        }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const delete_account = userToken => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n\r\n    const authData = {\r\n      idToken: userToken\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:delete?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        // console.log(response);\r\n        // dispatch(error_reset_password(true));\r\n        dispatch(spinner(false));\r\n        dispatch(log_out());\r\n        dispatch(delete_account_bool(true));\r\n      })\r\n      .catch(error => {\r\n        // console.log(error);\r\n        if (error.request.status === 0) {\r\n          dispatch(error_network(true));\r\n        } else {\r\n          // dispatch(error_reset_password(false));\r\n        }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const change_email = (userId, newEmail) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    // console.log(userId);\r\n    // console.log(newEmail);\r\n    const authData = {\r\n      idToken: userId,\r\n      email: newEmail,\r\n      returnSecureToken: true\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        // console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n          // new Date().getTime() + 300 * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        // dispatch(checkAuthTimeout(300));\r\n        dispatch(\r\n          create_user(\r\n            response.data.idToken,\r\n            response.data.localId,\r\n            response.data.email\r\n          )\r\n        );\r\n        dispatch(change_email_visible());\r\n        dispatch(change_email_bool(true));\r\n        dispatch(change_email_busy(false));\r\n        dispatch(spinner(false));\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n        if (error.request.status === 0) {\r\n          dispatch(error_network(true));\r\n        } else {\r\n          dispatch(change_email_busy(true));\r\n        }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const change_password = (userId, newPassword) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    // console.log(userId);\r\n    // console.log(newEmail);\r\n    const authData = {\r\n      idToken: userId,\r\n      password: newPassword,\r\n      returnSecureToken: true\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyDcjwHqCvXKM7R0UJN_GjfxrL6NNSjPjGc\";\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        // console.log(response);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n          // new Date().getTime() + 300 * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        // dispatch(checkAuthTimeout(300));\r\n        // dispatch(\r\n        //   create_user(\r\n        //     response.data.idToken,\r\n        //     response.data.localId,\r\n        //     response.data.email\r\n        //   )\r\n        // );\r\n        // dispatch(change_email_visible());\r\n        // dispatch(change_email_bool(true));\r\n        // dispatch(change_email_busy(false));\r\n        dispatch(spinner(false));\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n        if (error.request.status === 0) {\r\n          dispatch(error_network(true));\r\n        } else {\r\n          // dispatch(change_email_busy(true));\r\n        }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\n/////////////////////////////END AUTH///////////////////////////////////\r\nexport const order_value = (\r\n  date,\r\n  timeDay,\r\n  timeNight,\r\n  filterArray,\r\n  objectName\r\n) => {\r\n  return {\r\n    type: ORDER_VALUE,\r\n    date: date,\r\n    timeDay: timeDay,\r\n    timeNight: timeNight,\r\n    filterArray: filterArray,\r\n    objectName: objectName\r\n  };\r\n};\r\n\r\nexport const order_accept = value => {\r\n  return {\r\n    type: ORDER_ACCEPT,\r\n    value: value\r\n  };\r\n};\r\n\r\nexport const save_all_dispatch_array = response => {\r\n  return {\r\n    type: SAVE_ALL_DISPATCH_ARRAY,\r\n    response: response\r\n  };\r\n};\r\n\r\nexport const get_disabled_date = () => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n\r\n    let url = \"https://apartment-3c7b9.firebaseio.com/disabledAllDate.json\";\r\n\r\n    axios\r\n      .get(url)\r\n      .then(response => {\r\n        // console.log(response);\r\n        // dispatch(error_reset_password(true));\r\n        dispatch(spinner(false));\r\n        // console.log(response.data);\r\n        dispatch(save_all_dispatch_array(response.data));\r\n      })\r\n      .catch(error => {\r\n        // console.log(error);\r\n        // if (error.request.status === 0) {\r\n        //   dispatch(error_network(true));\r\n        // } else {\r\n        // dispatch(error_reset_password(false));\r\n        // }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const get_order = (userId, userToken) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n\r\n    let url =\r\n      \"https://apartment-3c7b9.firebaseio.com/orders.json?auth=\" +\r\n      userToken +\r\n      '&orderBy=\"userId\"&equalTo=\"' +\r\n      userId +\r\n      '\"';\r\n    axios\r\n      .get(url)\r\n      .then(response => {\r\n        console.log(response);\r\n        // dispatch(error_reset_password(true));\r\n        dispatch(spinner(false));\r\n        // console.log(response.data);\r\n        dispatch(save_all_dispatch_array(response.data));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        // if (error.request.status === 0) {\r\n        //   dispatch(error_network(true));\r\n        // } else {\r\n        // dispatch(error_reset_password(false));\r\n        // }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\nexport const add_new_disabled_data = (\r\n  date,\r\n  timeDay,\r\n  timeNight,\r\n  actualReservation,\r\n  actualObjectName,\r\n  userId,\r\n  disabledDataValue,\r\n  price\r\n) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    const authData = {\r\n      date: date,\r\n      timeDay: timeDay,\r\n      timeNight: timeNight\r\n      // actualReservation: actualReservation\r\n    };\r\n    if (actualObjectName) {\r\n      let url = `https://apartment-3c7b9.firebaseio.com/disabledAllDate/${actualObjectName}.json`;\r\n      axios\r\n        .put(url, authData)\r\n        .then(response => {\r\n          dispatch(get_disabled_date());\r\n          dispatch(\r\n            add_new_order(\r\n              price,\r\n              date,\r\n              timeDay,\r\n              timeNight,\r\n              actualReservation,\r\n              actualObjectName,\r\n              userId,\r\n              disabledDataValue\r\n            )\r\n          );\r\n          // dispatch(spinner(false));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          // if (error.request.status === 0) {\r\n          // dispatch(error_network(true));\r\n          // } else {\r\n          // dispatch(error_reset_password(false));\r\n          // }\r\n\r\n          dispatch(spinner(false));\r\n        });\r\n    } else {\r\n      let url = \"https://apartment-3c7b9.firebaseio.com/disabledAllDate.json\";\r\n      axios\r\n        .post(url, authData)\r\n        .then(response => {\r\n          // console.log(response);\r\n          // dispatch(error_reset_password(true));\r\n          dispatch(get_disabled_date());\r\n          dispatch(\r\n            add_new_order(\r\n              price,\r\n              date,\r\n              timeDay,\r\n              timeNight,\r\n              actualReservation,\r\n              actualObjectName,\r\n              userId\r\n            )\r\n          );\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          // if (error.request.status === 0) {\r\n          // dispatch(error_network(true));\r\n          // } else {\r\n          // dispatch(error_reset_password(false));\r\n          // }\r\n          dispatch(spinner(false));\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const add_new_order = (\r\n  price,\r\n  date,\r\n  timeDay,\r\n  timeNight,\r\n  actualReservation,\r\n  actualObjectName,\r\n  userId,\r\n  disabledDataValue\r\n) => {\r\n  return dispatch => {\r\n    dispatch(spinner(true));\r\n    let authData = {\r\n      date: date,\r\n      userId: userId,\r\n      price: price\r\n    };\r\n    if (timeDay && timeNight) {\r\n      authData = {\r\n        date: date,\r\n        timeDay: timeDay,\r\n        timeNight: timeNight,\r\n        userId: userId,\r\n        price: price\r\n      };\r\n    } else if (timeDay && !timeNight) {\r\n      authData = {\r\n        date: date,\r\n        timeDay: timeDay,\r\n        userId: userId,\r\n        price: price\r\n      };\r\n    } else if (!timeDay && timeNight) {\r\n      authData = {\r\n        date: date,\r\n        timeNight: timeNight,\r\n        userId: userId,\r\n        price: price\r\n      };\r\n    }\r\n\r\n    let filterArray = null;\r\n    if (disabledDataValue) {\r\n      filterArray = disabledDataValue.filter(item => item.date === date);\r\n    }\r\n\r\n    if (filterArray) {\r\n      if (filterArray[0].timeDay) {\r\n        authData = {\r\n          date: date,\r\n          timeNight: timeNight,\r\n          userId: userId,\r\n          price: price\r\n        };\r\n      } else if (filterArray[0].timeNight) {\r\n        authData = {\r\n          date: date,\r\n          timeDay: timeDay,\r\n          userId: userId,\r\n          price: price\r\n        };\r\n      }\r\n    }\r\n\r\n    let url = \"https://apartment-3c7b9.firebaseio.com/orders.json\";\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        // console.log(response);\r\n\r\n        dispatch(spinner(false));\r\n        dispatch(order_accept(false));\r\n      })\r\n      .catch(error => {\r\n        // console.log(error);\r\n        // if (error.request.status === 0) {\r\n        //   dispatch(error_network(true));\r\n        // } else {\r\n        //   // dispatch(error_reset_password(false));\r\n        // }\r\n        dispatch(spinner(false));\r\n      });\r\n  };\r\n};\r\n\r\n// export const update_disabled_data = (\r\n//   date,\r\n//   timeDay,\r\n//   timeNight,\r\n//   actualReservation,\r\n//   actualObjectName\r\n// ) => {\r\n//   return dispatch => {\r\n//     dispatch(spinner(true));\r\n\r\n//     const authData = {\r\n//       date: date,\r\n//       timeDay: timeDay,\r\n//       timeNight: timeNight\r\n//       // actualReservation: actualReservation\r\n//     };\r\n//     let url = `https://apartment-3c7b9.firebaseio.com/disabledAllDate/${actualObjectName}.json`;\r\n//     axios\r\n//       .put(url, authData)\r\n//       .then(response => {\r\n//         dispatch(get_disabled_date());\r\n//         dispatch(spinner(false));\r\n//       })\r\n//       .catch(error => {\r\n//         // console.log(error);\r\n//         if (error.request.status === 0) {\r\n//           dispatch(error_network(true));\r\n//         } else {\r\n//           // dispatch(error_reset_password(false));\r\n//         }\r\n\r\n//         dispatch(spinner(false));\r\n//       });\r\n//   };\r\n// };\r\n","import * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n  //START AUTH//\r\n  signed: null,\r\n  newAccount: false,\r\n  userToken: null,\r\n  userId: null,\r\n  userName: null,\r\n  userEmail: null,\r\n  errorLogin: false,\r\n  errorAccount: false,\r\n  orderVisible: false,\r\n  settingsAccountVisible: false,\r\n  spinner: false,\r\n  loginVisible: false,\r\n  registrationVisible: false,\r\n  menuVisible: false,\r\n  errorNetwork: false,\r\n  errorNetworkRegistration: false,\r\n  resetPasswordVisible: false,\r\n  errorResetPassword: null,\r\n  changeEmailVisible: false,\r\n  changePasswordVisible: false,\r\n  registrationValidation: false,\r\n  loginValidation: false,\r\n  deleteAccountConfirm: false,\r\n  deleteAccount: false,\r\n  changeEmail: false,\r\n  changeEmailBusy: false,\r\n  //END AUTH//\r\n  disabledDate: null,\r\n  disabledDataValue: null,\r\n  orderAccept: false,\r\n  orderValue: {\r\n    date: null,\r\n    timeDay: null,\r\n    timeNight: null,\r\n    filterArray: null,\r\n    objectName: null\r\n  }\r\n};\r\n\r\nconst save_all_dispatch_array = (state, action) => {\r\n  let allArray = Object.entries(action.response);\r\n  let allArrayValue = Object.values(action.response);\r\n  return {\r\n    ...state,\r\n    disabledDate: allArray,\r\n    disabledDataValue: allArrayValue\r\n  };\r\n};\r\n\r\nconst order_accept = (state, action) => {\r\n  return {\r\n    ...state,\r\n    orderAccept: action.value,\r\n    orderVisible: action.orderVisible\r\n  };\r\n};\r\n\r\nconst order_value = (state, action) => {\r\n  return {\r\n    ...state,\r\n    orderValue: {\r\n      date: action.date,\r\n      timeDay: action.timeDay,\r\n      timeNight: action.timeNight,\r\n      filterArray: action.filterArray,\r\n      objectName: action.objectName,\r\n      orderAccept: true\r\n    }\r\n  };\r\n};\r\n\r\n//START AUTH//\r\nconst log_out = (state, action) => {\r\n  return {\r\n    ...state,\r\n    signed: null,\r\n    newAccount: false,\r\n    userToken: null,\r\n    userId: null,\r\n    userName: null,\r\n    userEmail: null,\r\n    errorLogin: false,\r\n    errorAccount: false,\r\n    orderVisible: false,\r\n    settingsAccountVisible: false,\r\n    spinner: false,\r\n    loginVisible: false,\r\n    registrationVisible: false,\r\n    menuVisible: false,\r\n    errorNetwork: false,\r\n    resetPasswordVisible: false,\r\n    errorResetPassword: null,\r\n    changeEmailVisible: false,\r\n    registrationValidation: false,\r\n    loginValidation: false,\r\n    deleteAccountConfirm: false,\r\n    deleteAccount: false,\r\n    changeEmail: false,\r\n    changeEmailBusy: false,\r\n    changePasswordVisible: false\r\n  };\r\n};\r\n\r\nconst change_email = (state, action) => {\r\n  return {\r\n    ...state,\r\n    changeEmail: action.value,\r\n    errorNetwork: false\r\n  };\r\n};\r\n\r\nconst change_password_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    changePasswordVisible: !state.changePasswordVisible\r\n  };\r\n};\r\n\r\nconst change_email_busy = (state, action) => {\r\n  return {\r\n    ...state,\r\n    changeEmailBusy: action.value,\r\n    errorNetwork: false\r\n  };\r\n};\r\n\r\nconst delete_account = (state, action) => {\r\n  return {\r\n    ...state,\r\n    deleteAccount: action.value\r\n  };\r\n};\r\n\r\nconst delete_account_confirm = (state, action) => {\r\n  return {\r\n    ...state,\r\n    deleteAccountConfirm: !state.deleteAccountConfirm,\r\n    changeEmail: false,\r\n    errorResetPassword: null\r\n  };\r\n};\r\n\r\nconst login_validation_change = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loginValidation: action.value\r\n  };\r\n};\r\n\r\nconst registration_validation_change = (state, action) => {\r\n  return {\r\n    ...state,\r\n    registrationValidation: action.value\r\n  };\r\n};\r\n\r\nconst reset_password_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    resetPasswordVisible: !state.resetPasswordVisible,\r\n    errorResetPassword: null,\r\n    loginValidation: false,\r\n    error_network: false\r\n  };\r\n};\r\n\r\nconst menu_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    menuVisible: !state.menuVisible\r\n  };\r\n};\r\n\r\nconst login_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loginVisible: !state.loginVisible,\r\n    registrationVisible: false,\r\n    errorNetwork: false,\r\n    resetPasswordVisible: false,\r\n    errorResetPassword: null,\r\n    loginValidation: false,\r\n    errorLogin: false,\r\n    errorAccount: false,\r\n    deleteAccount: false,\r\n    newAccount: false\r\n  };\r\n};\r\n\r\nconst registration_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    registrationVisible: !state.registrationVisible,\r\n    loginVisible: false,\r\n    errorNetwork: false,\r\n    errorResetPassword: null,\r\n    registrationValidation: false,\r\n    errorLogin: false,\r\n    errorAccount: false,\r\n    deleteAccount: false,\r\n    newAccount: false\r\n  };\r\n};\r\n\r\nconst spinner = (state, action) => {\r\n  return {\r\n    ...state,\r\n    spinner: action.value\r\n  };\r\n};\r\n\r\nconst order_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    orderVisible: !state.orderVisible,\r\n    settingsAccountVisible: false,\r\n    deleteAccountConfirm: false,\r\n    changeEmailVisible: false,\r\n    changeEmail: false,\r\n    errorResetPassword: null,\r\n    changeEmailBusy: false\r\n  };\r\n};\r\n\r\nconst settings_account_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    settingsAccountVisible: !state.settingsAccountVisible,\r\n    orderVisible: false,\r\n    changeEmailVisible: false,\r\n    deleteAccountConfirm: false,\r\n    changeEmail: false,\r\n    errorResetPassword: null,\r\n    changeEmailBusy: false\r\n  };\r\n};\r\n\r\nconst is_error_login = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errorLogin: action.value,\r\n    errorNetwork: false\r\n  };\r\n};\r\n\r\nconst is_error_account = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errorAccount: action.value,\r\n    errorNetwork: false\r\n  };\r\n};\r\n\r\nconst is_signed = (state, action) => {\r\n  return {\r\n    ...state,\r\n    signed: action.value,\r\n    userEmail: action.email\r\n  };\r\n};\r\n\r\nconst is_signed_token = (state, action) => {\r\n  let userName = action.email;\r\n  let index = userName.lastIndexOf(\"@\");\r\n  userName = userName.slice(0, index);\r\n  return {\r\n    ...state,\r\n    userToken: action.token,\r\n    userId: action.userId,\r\n    userName: userName,\r\n    userEmail: action.email,\r\n    signed: true\r\n  };\r\n};\r\n\r\nconst is_newAccount = (state, action) => {\r\n  return {\r\n    ...state,\r\n    newAccount: action.value,\r\n    errorNetwork: false\r\n  };\r\n};\r\n\r\nconst create_user = (state, action) => {\r\n  let userName = action.userName;\r\n  let index = userName.lastIndexOf(\"@\");\r\n  userName = userName.slice(0, index);\r\n  return {\r\n    ...state,\r\n    userToken: action.userToken,\r\n    userId: action.userId,\r\n    userName: userName,\r\n    userEmail: action.userName\r\n  };\r\n};\r\n\r\nconst error_network = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errorNetwork: action.value,\r\n    errorAccount: false,\r\n    errorLogin: false,\r\n    errorResetPassword: null,\r\n    changeEmail: false,\r\n    changeEmailBusy: false,\r\n    newAccount: false\r\n  };\r\n};\r\n\r\nconst error_reset_password = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errorResetPassword: action.value,\r\n    errorNetwork: false,\r\n    changeEmail: false\r\n  };\r\n};\r\n\r\nconst change_email_visible = (state, action) => {\r\n  return {\r\n    ...state,\r\n    changeEmailVisible: !state.changeEmailVisible,\r\n    changeEmail: false,\r\n    errorResetPassword: null,\r\n    changeEmailBusy: false\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //START AUTH//\r\n    case actionTypes.RESET_PASSWORD_VISIBLE:\r\n      return reset_password_visible(state, action);\r\n\r\n    case actionTypes.CHANGE_PASSWORD_VISIBLE:\r\n      return change_password_visible(state, action);\r\n\r\n    case actionTypes.DELETE_ACCOUNT:\r\n      return delete_account(state, action);\r\n\r\n    case actionTypes.CHANGE_EMAIL_BUSY:\r\n      return change_email_busy(state, action);\r\n\r\n    case actionTypes.CHANGE_EMAIL:\r\n      return change_email(state, action);\r\n\r\n    case actionTypes.REGISTRATION_VALIDATION_CHANGE:\r\n      return registration_validation_change(state, action);\r\n\r\n    case actionTypes.DELETE_ACCOUNT_CONFIRM:\r\n      return delete_account_confirm(state, action);\r\n\r\n    case actionTypes.LOGIN_VALIDATION_CHANGE:\r\n      return login_validation_change(state, action);\r\n\r\n    case actionTypes.MENU_VISIBLE:\r\n      return menu_visible(state, action);\r\n\r\n    case actionTypes.LOGIN_VISIBLE:\r\n      return login_visible(state, action);\r\n\r\n    case actionTypes.REGISTRATION_VISIBLE:\r\n      return registration_visible(state, action);\r\n\r\n    case actionTypes.LOG_OUT:\r\n      return log_out(state, action);\r\n\r\n    case actionTypes.IS_ERROR_LOGIN:\r\n      return is_error_login(state, action);\r\n\r\n    case actionTypes.IS_ERROR_ACCOUNT:\r\n      return is_error_account(state, action);\r\n\r\n    case actionTypes.IS_NEWACCOUNT:\r\n      return is_newAccount(state, action);\r\n\r\n    case actionTypes.IS_SIGNED:\r\n      return is_signed(state, action);\r\n\r\n    case actionTypes.IS_SIGNED_TOKEN:\r\n      return is_signed_token(state, action);\r\n\r\n    case actionTypes.CREATE_USER:\r\n      return create_user(state, action);\r\n\r\n    case actionTypes.ORDER_VISIBLE:\r\n      return order_visible(state, action);\r\n\r\n    case actionTypes.SETTINGS_ACCOUNT_VISIBLE:\r\n      return settings_account_visible(state, action);\r\n\r\n    case actionTypes.SPINNER:\r\n      return spinner(state, action);\r\n\r\n    case actionTypes.ERROR_NETWORK:\r\n      return error_network(state, action);\r\n\r\n    case actionTypes.ERROR_RESET_PASSWORD:\r\n      return error_reset_password(state, action);\r\n\r\n    case actionTypes.CHANGE_EMAIL_VISIBLE:\r\n      return change_email_visible(state, action);\r\n    //END AUTH//\r\n    case actionTypes.SAVE_ALL_DISPATCH_ARRAY:\r\n      return save_all_dispatch_array(state, action);\r\n\r\n    case actionTypes.ORDER_ACCEPT:\r\n      return order_accept(state, action);\r\n\r\n    case actionTypes.ORDER_VALUE:\r\n      return order_value(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React from \"react\";\r\n\r\nconst title = ({ name }) => {\r\n  return (\r\n    <>\r\n      <h1>{name}</h1>\r\n      <div className=\"whiteLine\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default title;\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nexport default class AboutUs extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"about_us\" className=\"margin-80\">\r\n        <Title name=\"O NAS\" />\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Enim\r\n          reiciendis placeat porro, error sed fugit laboriosam? Quasi molestiae\r\n          temporibus ipsum aliquid possimus libero repudiandae unde enim,\r\n          quisquam nulla consequatur nostrum?Illum explicabo quisquam voluptatum\r\n          alias. Earum numquam accusantium minus. Eligendi fugit quod tempora\r\n          rem enim omnis, eos, odio tempore numquam, nobis nam dolore fugiat\r\n          sequi. Distinctio asperiores sint debitis ut!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import img1 from \"./1.JPG\";\r\nimport img2 from \"./2.JPG\";\r\nimport img3 from \"./3.JPG\";\r\nimport img4 from \"./4.JPG\";\r\nimport img5 from \"./5.JPG\";\r\nimport img6 from \"./6.JPG\";\r\nimport img7 from \"./7.JPG\";\r\nimport img8 from \"./8.JPG\";\r\nimport img9 from \"./9.JPG\";\r\nimport img10 from \"./10.JPG\";\r\nimport img11 from \"./11.JPG\";\r\n\r\nconst imagesGallery = [\r\n  {\r\n    id: 1,\r\n    src: img1,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 2,\r\n    src: img2,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 3,\r\n    src: img3,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 4,\r\n    src: img4,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 5,\r\n    src: img5,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 6,\r\n    src: img6,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 7,\r\n    src: img7,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 8,\r\n    src: img8,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 9,\r\n    src: img9,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 10,\r\n    src: img10,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  },\r\n  {\r\n    id: 11,\r\n    src: img11,\r\n    title: \"foo\",\r\n    description: \"bar\"\r\n  }\r\n];\r\n\r\nexport default imagesGallery;\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport \"react-id-swiper/lib/styles/scss/swiper.scss\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport imagesGallery from \"../img/gallery/imagesGallery\";\r\n\r\nexport default class Gallery extends Component {\r\n  render() {\r\n    const params = {\r\n      effect: \"coverflow\",\r\n      grabCoursor: true,\r\n      centereSlides: true,\r\n      slidesPerView: \"auto\",\r\n      coverflowEffect: {\r\n        rotate: 50,\r\n        stretch: 0,\r\n        depth: 100,\r\n        modyfier: 1\r\n      },\r\n      pagination: {\r\n        el: \".swiper-pagination\"\r\n      },\r\n\r\n      navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\"\r\n      },\r\n      renderPrevButton: () => (\r\n        <button className=\"swiper-button-prev\">\r\n          <div className=\"arrowGalleryLeft\">\r\n            <div className=\"arrowUp\" />\r\n            <div className=\"arrowDown\" />\r\n          </div>\r\n        </button>\r\n      ),\r\n      renderNextButton: () => (\r\n        <button className=\"swiper-button-next\">\r\n          <div className=\"arrowGalleryRight\">\r\n            <div className=\"arrowUp\" />\r\n            <div className=\"arrowDown\" />\r\n          </div>\r\n        </button>\r\n      )\r\n    };\r\n    const allImages = imagesGallery.map(item => (\r\n      <div key={item.id}>\r\n        <img\r\n          src={item.src}\r\n          // title={item.title}\r\n          alt={item.description}\r\n        />\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"margin-80\">\r\n        <div className=\"containerFluid overflowHidden \">\r\n          {/* <div className=\"container\"> */}\r\n          <Title name=\"GALERIA\" />\r\n          <Swiper {...params}>{allImages}</Swiper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formButton = ({\r\n  buttonName,\r\n  buttonOnClick,\r\n  buttonDisabled = false,\r\n  buttonColor = \"gray\",\r\n  buttonInline = false,\r\n  width = \"150\"\r\n}) => {\r\n  const buttonColorClass =\r\n    buttonColor === \"gray\"\r\n      ? \"bg-normalGray\"\r\n      : buttonColor === \"blue\"\r\n      ? \"bg-normalBlue\"\r\n      : buttonColor === \"red\"\r\n      ? \"bg-normalRed\"\r\n      : buttonColor === \"green\"\r\n      ? \"bg-normalGreen\"\r\n      : buttonColor === \"yellow\"\r\n      ? \"bg-normalYellow\"\r\n      : \"bg-normalGray\";\r\n  const buttonInlineClass = buttonInline ? \"d-inline-flex\" : \"\";\r\n  return (\r\n    <button\r\n      className={`btn buttonEffect p-1 ${buttonColorClass} ${buttonInlineClass}`}\r\n      disabled={buttonDisabled}\r\n      onClick={buttonOnClick}\r\n    >\r\n      <span>{buttonName}</span>\r\n      <svg style={{ width: `${width}` }}>\r\n        <polyline\r\n          className=\"o1\"\r\n          points={`0 0, ${width} 0, ${width} 40, 0 40, 0 0`}\r\n        ></polyline>\r\n        <polyline\r\n          className=\"o2\"\r\n          points={`0 0, ${width} 0, ${width} 40, 0 40, 0 0`}\r\n        ></polyline>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nformButton.propTypes = {\r\n  buttonName: PropTypes.string.isRequired,\r\n  buttonOnClick: PropTypes.func,\r\n  buttonDisabled: PropTypes.bool\r\n};\r\n\r\nexport default formButton;\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport Calendar from \"react-calendar\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Callendary extends Component {\r\n  state = {\r\n    date: null,\r\n    actualDate: new Date(),\r\n    validation: false,\r\n    timeDay: false,\r\n    timeNight: false,\r\n    actualArray: null,\r\n    actualObjectName: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.get_disabled_date();\r\n  }\r\n\r\n  onChange = date => {\r\n    let timeDayNewValue = false;\r\n    let timeNightNewValue = false;\r\n    let actualArray = null;\r\n    let actualObjectName = null;\r\n\r\n    const getDate = `${date.getFullYear()}-${date.getMonth() +\r\n      1}-${date.getDate()}`;\r\n    if (this.props.disabledDate) {\r\n      const allArray = [...this.props.disabledDate];\r\n      const filterArray = allArray.filter(item => item[1].date === getDate);\r\n      if (filterArray.length > 0) {\r\n        timeDayNewValue = filterArray[0][1].timeDay;\r\n        timeNightNewValue = filterArray[0][1].timeNight;\r\n        actualArray = filterArray[0][1];\r\n        actualObjectName = filterArray[0][0];\r\n      }\r\n    }\r\n    this.setState({\r\n      date: date,\r\n      timeDay: timeDayNewValue,\r\n      timeNight: timeNightNewValue,\r\n      actualArray: actualArray,\r\n      actualObjectName: actualObjectName\r\n    });\r\n  };\r\n\r\n  renderDisabled = (date, view) => {\r\n    if (this.props.disabledDataValue) {\r\n      const disabledDate = [...this.props.disabledDataValue];\r\n      const getDate = `${date.getFullYear()}-${date.getMonth() +\r\n        1}-${date.getDate()}`;\r\n      let dateBool = false;\r\n\r\n      disabledDate.map(item => {\r\n        if (\r\n          item.date === getDate &&\r\n          item.timeDay === true &&\r\n          item.timeNight === true\r\n        ) {\r\n          dateBool = true;\r\n        }\r\n        return null;\r\n      });\r\n      return dateBool;\r\n    }\r\n  };\r\n  handleOrder = () => {\r\n    let actualArray = this.state.actualArray;\r\n    let date = this.state.date;\r\n    let validation = true;\r\n    this.props.order_accept(false);\r\n\r\n    let filterArray = null;\r\n    if (this.state.actualArray) {\r\n      filterArray = this.props.disabledDate.filter(\r\n        item => item[1].date === this.state.actualArray.date\r\n      );\r\n    }\r\n    if (date) {\r\n      const getDate = `${date.getFullYear()}-${date.getMonth() +\r\n        1}-${date.getDate()}`;\r\n      if (this.state.actualArray) {\r\n        if (this.state.date && this.state.timeDay && this.state.timeNight) {\r\n          // console.log(\"1 z tablicy\");\r\n          // this.props.update_disabled_data(\r\n          //   getDate,\r\n          //   this.state.timeDay,\r\n          //   this.state.timeNight,\r\n          //   \"actualReservation\",\r\n          //   this.state.actualObjectName\r\n          // );\r\n          this.props.order_value(\r\n            getDate,\r\n            this.state.timeDay,\r\n            this.state.timeNight,\r\n            filterArray,\r\n            this.state.actualObjectName\r\n          );\r\n          this.props.order_accept(true);\r\n          actualArray = { ...this.state.actualArray };\r\n          actualArray.timeDay = true;\r\n          actualArray.timeNight = true;\r\n          date = null;\r\n          validation = false;\r\n        }\r\n      } else {\r\n        if (this.state.date) {\r\n          if (this.state.timeDay && this.state.timeNight) {\r\n            // console.log(\"2 bez tablicy\");\r\n            // this.props.add_new_disabled_data(\r\n            //   getDate,\r\n            //   this.state.timeDay,\r\n            //   this.state.timeNight,\r\n            //   \"actualReservation\",\r\n            //   this.state.actualObjectName\r\n            // );\r\n            this.props.order_value(\r\n              getDate,\r\n              this.state.timeDay,\r\n              this.state.timeNight,\r\n              filterArray,\r\n              this.state.actualObjectName\r\n            );\r\n\r\n            this.props.order_accept(true);\r\n            validation = false;\r\n            date = null;\r\n            actualArray = null;\r\n          } else if (this.state.timeDay || this.state.timeNight) {\r\n            // console.log(\"1 bez tablicy\");\r\n\r\n            this.props.order_accept(true);\r\n            // this.props.add_new_disabled_data(\r\n            //   getDate,\r\n            //   this.state.timeDay,\r\n            //   this.state.timeNight,\r\n            //   \"actualReservation\",\r\n            //   this.state.actualObjectName\r\n            // );\r\n\r\n            this.props.order_value(\r\n              getDate,\r\n              this.state.timeDay,\r\n              this.state.timeNight,\r\n              filterArray,\r\n              this.state.actualObjectName\r\n            );\r\n\r\n            validation = false;\r\n            date = null;\r\n            actualArray = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      date: date,\r\n      validation: validation,\r\n      actualArray: actualArray\r\n    });\r\n  };\r\n\r\n  handleAddTime = (e, name) => {\r\n    if (this.state.date) {\r\n      if (this.state.actualArray) {\r\n        if (this.state.actualArray[name] === false) {\r\n          this.setState(prevState => ({\r\n            [name]: !prevState[name]\r\n          }));\r\n        }\r\n      } else {\r\n        this.setState(prevState => ({\r\n          [name]: !prevState[name]\r\n        }));\r\n      }\r\n    } else {\r\n      this.setState({\r\n        validation: true\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let filterArray = null;\r\n    if (this.state.actualArray) {\r\n      filterArray = this.props.disabledDate.filter(\r\n        item => item[1].date === this.state.actualArray.date\r\n      );\r\n    }\r\n\r\n    const minDay = new Date();\r\n    let maxYear = minDay.getFullYear();\r\n    let maxMonth = minDay.getMonth() + 4;\r\n    if (minDay.getMonth() + 4 > 12) {\r\n      maxMonth = maxMonth - 12;\r\n      maxYear = maxYear + 1;\r\n    }\r\n    const maxDay = new Date(`${maxYear}-${maxMonth}-${minDay.getDate()}`);\r\n\r\n    const noSelectDayClass =\r\n      this.state.validation && !this.state.date ? \"goDownText\" : \"\";\r\n    let noSelectHourClass = \"\";\r\n\r\n    let dayDayClass = \"gray\";\r\n    let dayNightClass = \"gray\";\r\n\r\n    if (this.state.date) {\r\n      if (filterArray) {\r\n        dayDayClass = filterArray[0][1].timeDay\r\n          ? \"red\"\r\n          : this.state.timeDay\r\n          ? \"yellow\"\r\n          : \"green\";\r\n        dayNightClass = filterArray[0][1].timeNight\r\n          ? \"red\"\r\n          : this.state.timeNight\r\n          ? \"yellow\"\r\n          : \"green\";\r\n        noSelectHourClass =\r\n          this.state.validation &&\r\n          this.state.date &&\r\n          !(this.state.timeNight && this.state.timeDay)\r\n            ? \"goDownText\"\r\n            : \"\";\r\n      } else {\r\n        dayDayClass =\r\n          this.state.date && this.state.timeDay ? \"yellow\" : \"green\";\r\n        dayNightClass =\r\n          this.state.date && this.state.timeNight ? \"yellow\" : \"green\";\r\n        noSelectHourClass =\r\n          this.state.validation &&\r\n          this.state.date &&\r\n          !(this.state.timeNight || this.state.timeDay)\r\n            ? \"goDownText\"\r\n            : \"\";\r\n      }\r\n    }\r\n\r\n    const toOrder =\r\n      this.props.userEmail &&\r\n      this.props.userName &&\r\n      this.props.userId &&\r\n      this.props.userToken ? (\r\n        <div className=\"text-center positionRelative\">\r\n          <div className=\"buttonIndex\">\r\n            <FormButton\r\n              buttonName=\"Przejdź dalej\"\r\n              buttonOnClick={this.handleOrder}\r\n              buttonColor=\"red\"\r\n              buttonInline={true}\r\n            />\r\n          </div>\r\n\r\n          <div className={`textSelectDay ${noSelectDayClass}`}>\r\n            Wybierz dzień\r\n          </div>\r\n          <div className={`textSelectDay ${noSelectHourClass}`}>\r\n            Wybierz godzinę\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center text-danger\">\r\n          <h5>Zaloguj się, aby dokonać rezerwacji</h5>\r\n        </div>\r\n      );\r\n    const selectTime =\r\n      this.props.userEmail &&\r\n      this.props.userName &&\r\n      this.props.userId &&\r\n      this.props.userToken ? (\r\n        <h5 className=\"text-white\">Godziny do wyboru</h5>\r\n      ) : null;\r\n    return (\r\n      <div className=\"margin-80\">\r\n        <Title name=\"KALENDARZ\" />\r\n        <div className=\"mt-4 mb-4\">\r\n          <Calendar\r\n            onChange={this.onChange}\r\n            minDate={minDay}\r\n            maxDate={maxDay}\r\n            activeStartDate={this.state.date}\r\n            value={this.state.date}\r\n            locale=\"pl-PL\"\r\n            tileDisabled={({ date, view }) => this.renderDisabled(date, view)}\r\n          />\r\n        </div>\r\n        <div className=\"text-center positionRelative\">\r\n          {selectTime}\r\n          <div className=\"selectTime mb-4\">\r\n            {/* <button\r\n              className={`btn mr-1 ${dayDayClass}`}\r\n              name=\"timeDay\"\r\n              onClick={e => this.handleAddTime(e, \"timeDay\")}\r\n              disabled={this.state.date === null}\r\n            >\r\n              9-18\r\n            </button> */}\r\n            <FormButton\r\n              buttonName=\"9-18\"\r\n              buttonOnClick={e => this.handleAddTime(e, \"timeDay\")}\r\n              buttonColor={dayDayClass}\r\n              buttonInline={true}\r\n              width=\"60\"\r\n            />\r\n            {/* <button\r\n              className={`btn ml-1 ${dayNightClass}`}\r\n              name=\"timeNight\"\r\n              onClick={e => this.handleAddTime(e, \"timeNight\")}\r\n              disabled={this.state.date === null}\r\n            >\r\n              19-03\r\n            </button> */}\r\n            <FormButton\r\n              buttonName=\"19-03\"\r\n              buttonOnClick={e => this.handleAddTime(e, \"timeNight\")}\r\n              buttonColor={dayNightClass}\r\n              buttonInline={true}\r\n              width=\"60\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {toOrder}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    disabledDate: state.disabledDate,\r\n    disabledDataValue: state.disabledDataValue,\r\n    orderAccept: state.orderAccept,\r\n    orderValue: state.orderValue,\r\n    userEmail: state.userEmail,\r\n    userName: state.userName,\r\n    userId: state.userId,\r\n    userToken: state.userToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    isSigned: value => dispatch(actionTypes.is_signed(value)),\r\n    add_new_disabled_data: (\r\n      date,\r\n      timeDay,\r\n      timeNight,\r\n      actualReservation,\r\n      actualObjectName\r\n    ) =>\r\n      dispatch(\r\n        actionTypes.add_new_disabled_data(\r\n          date,\r\n          timeDay,\r\n          timeNight,\r\n          actualReservation,\r\n          actualObjectName\r\n        )\r\n      ),\r\n    // update_disabled_data: (\r\n    //   date,\r\n    //   timeDay,\r\n    //   timeNight,\r\n    //   actualReservation,\r\n    //   actualObjectName\r\n    // ) =>\r\n    //   dispatch(\r\n    //     actionTypes.update_disabled_data(\r\n    //       date,\r\n    //       timeDay,\r\n    //       timeNight,\r\n    //       actualReservation,\r\n    //       actualObjectName\r\n    //     )\r\n    //   ),\r\n    get_disabled_date: () => dispatch(actionTypes.get_disabled_date()),\r\n    order_accept: value => dispatch(actionTypes.order_accept(value)),\r\n    order_value: (date, timeDay, timeNight, filterArray, objectName) =>\r\n      dispatch(\r\n        actionTypes.order_value(\r\n          date,\r\n          timeDay,\r\n          timeNight,\r\n          filterArray,\r\n          objectName\r\n        )\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Callendary);\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nexport default class Reservation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"margin-80\">\r\n        <Title name=\"REZERWACJA\" />\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Enim\r\n          reiciendis placeat porro, error sed fugit laboriosam? Quasi molestiae\r\n          temporibus ipsum aliquid possimus libero repudiandae unde enim,\r\n          quisquam nulla consequatur nostrum?Illum explicabo quisquam voluptatum\r\n          alias. Earum numquam accusantium minus. Eligendi fugit quod tempora\r\n          rem enim omnis, eos, odio tempore numquam, nobis nam dolore fugiat\r\n          sequi. Distinctio asperiores sint debitis ut!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Title name=\"KONTAKT\" />\r\n        <div className=\"text-center text-white\">\r\n          <h5>PC-TECH RADOM</h5>\r\n          <h6>26-600 Radom</h6>\r\n          <h6>Ul. Struga 18</h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/section.scss\";\r\nimport AboutUs from \"../components/aboutUs\";\r\nimport Gallery from \"../components/gallery\";\r\nimport Callendary from \"../components/callendary\";\r\nimport Reservation from \"../components/reservation\";\r\nimport Contact from \"../components/contact\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"jumbotron-fluid sectionBg\">\r\n          <div className=\"container\">\r\n            <AboutUs />\r\n\r\n            <Callendary />\r\n\r\n            <Reservation />\r\n          </div>\r\n          <Gallery />\r\n          <div className=\"container\">\r\n            <Contact />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orderAccept: state.orderAccept\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    menu_visible: () => dispatch(actionTypes.menu_visible())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Section);\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/footer.scss\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div>© 2019 Hubert Mazur | Wszelkie prawa zastrzeżone.</div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../scss/nav.scss\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCog, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    const buttonsLogin = this.props.signed ? (\r\n      <>\r\n        <div className=\"user\">\r\n          <div className=\"ml-3\">{this.props.userName}</div>\r\n        </div>\r\n        <div className=\"dropDownMenu text-right\">\r\n          <div className=\"d-inline-block\">\r\n            <DropdownButton\r\n              variant=\"\"\r\n              alignRight\r\n              id=\"dropdown-menu-align-right\"\r\n              title={<FontAwesomeIcon icon={faCog} />}\r\n            >\r\n              <Dropdown.Item\r\n                onClick={this.props.order_visible}\r\n                className=\"text-center\"\r\n              >\r\n                Zamówienia\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={this.props.settings_account_visible}\r\n                className=\"text-center\"\r\n              >\r\n                Ustawienia konta\r\n              </Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <Dropdown.Item\r\n                onClick={this.props.logOut}\r\n                className=\"text-center pl-1 pr-1\"\r\n              >\r\n                <FormButton\r\n                  buttonName=\"Wyloguj\"\r\n                  buttonColor=\"red\"\r\n                  buttonInline={false}\r\n                />\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </div>\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <div className=\"text-right min-height\">\r\n        <NavLink to=\"/\">\r\n          <FormButton\r\n            buttonName=\"Rejestracja\"\r\n            buttonOnClick={this.props.registration_visible}\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n            width=\"120\"\r\n          />\r\n        </NavLink>\r\n        <NavLink to=\"/\">\r\n          <FormButton\r\n            buttonName=\"Logowanie\"\r\n            buttonOnClick={this.props.login_visible}\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            width=\"120\"\r\n          />\r\n        </NavLink>\r\n      </div>\r\n    );\r\n    return (\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <FontAwesomeIcon\r\n            icon={faBars}\r\n            size=\"2x\"\r\n            onClick={this.props.menu_visible}\r\n          />\r\n        </div>\r\n        {buttonsLogin}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    signed: state.signed,\r\n    userName: state.userName\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    isSigned: value => dispatch(actionTypes.is_signed(value)),\r\n    logOut: () => dispatch(actionTypes.log_out()),\r\n    order_visible: () => dispatch(actionTypes.order_visible()),\r\n    settings_account_visible: () =>\r\n      dispatch(actionTypes.settings_account_visible()),\r\n    login_visible: () => dispatch(actionTypes.login_visible()),\r\n    registration_visible: () => dispatch(actionTypes.registration_visible()),\r\n    menu_visible: () => dispatch(actionTypes.menu_visible())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Nav);\r\n","import React, { Component } from \"react\";\r\nimport \"../scss/header.scss\";\r\nimport img from \"../../src/img/video.mp4\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <header>\r\n          <div className=\"firstVideo\">\r\n            <div className=\"positionSpinner\">\r\n              <h1 className=\"text-danger font-weight-bold\">\r\n                Gotowy na niezapomniane chwile?\r\n              </h1>\r\n            </div>\r\n            <video\r\n              poster=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/4273/polina.jpg\"\r\n              id=\"bgvid\"\r\n              playsInline\r\n              autoPlay\r\n              muted\r\n              loop\r\n            >\r\n              <source src={img} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst modal = ({ name, onClickButton, modalError = true, modalOn = true }) => {\r\n  const modalTransformStyle = modalOn ? \"modalOn\" : \"modalOff\";\r\n  const modalErrorStyle = modalError ? \"modalError\" : \"modalSuccess\";\r\n  return (\r\n    <div\r\n      className={`${modalErrorStyle} ${modalTransformStyle}`}\r\n      onClick={onClickButton}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8 offset-2\">{name}</div>\r\n          <div className=\"col-2 text-right positionRelative\">\r\n            <div className=\"positionVertical\">\r\n              <button onClick={onClickButton}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default modal;\r\n","import React from \"react\";\r\n\r\nconst closePage = ({ onClick }) => {\r\n  return (\r\n    <div className=\"closePage\" onClick={onClick}>\r\n      <div className=\"positionArrow\">\r\n        <div className=\"allLines\">\r\n          <div className=\"line1 d-inline-block\" />\r\n          <div className=\"linesArrow d-inline-block\">\r\n            <div className=\"line3 \" />\r\n            <div className=\"line4 \" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default closePage;\r\n","import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nconst loginAccount = ({\r\n  inputs,\r\n  handleResetPassword,\r\n  handleOnClickSave,\r\n  resetPasswordVisible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        resetPasswordVisible === false\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <Title name=\"LOGOWANIE\" />\r\n        {inputs}\r\n\r\n        <div className=\"row margin-top-40\">\r\n          <div className=\"col-12\">\r\n            <div className=\"text-center \">\r\n              <FormButton\r\n                buttonName=\"Odzyskaj hasło\"\r\n                buttonOnClick={handleResetPassword}\r\n                buttonColor=\"red\"\r\n                buttonInline={true}\r\n              />\r\n              <FormButton\r\n                buttonName=\"Zaloguj\"\r\n                buttonOnClick={handleOnClickSave}\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default loginAccount;\r\n","import React from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nconst resetPassword = ({\r\n  resetPasswordVisible,\r\n  reset_password_visible,\r\n  resetPassword,\r\n  resetPasswordValidation,\r\n  handleInputOnChangePassword,\r\n  handleOnClickResetPassword\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        resetPasswordVisible === true\r\n          ? \"resetPassword resetPasswordDown\"\r\n          : \"loginAccount \"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <Title name=\"ODZYSKIWANIE HASŁA\" />\r\n        <FormElement\r\n          formName=\"Twój adres e-mail\"\r\n          itemFalseName=\"Nie poprawny e-mail\"\r\n          formValidation={resetPasswordValidation}\r\n          itemValidation={resetPassword.email.validated}\r\n          itemOnChange={handleInputOnChangePassword}\r\n          itemValue={resetPassword.email.value}\r\n          itemName=\"email\"\r\n          itemType=\"email\"\r\n          itemPlaceholder=\"\"\r\n        />\r\n\r\n        <div className=\"text-center margin-top-40\">\r\n          <FormButton\r\n            buttonName=\"Powrót\"\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            buttonOnClick={reset_password_visible}\r\n          />\r\n          <FormButton\r\n            buttonName=\"Wyślij\"\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n            buttonOnClick={handleOnClickResetPassword}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default resetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport FormItem from \"../elements/formElement/formElement\";\r\nimport LoginAccount from \"./loginAccount\";\r\nimport ResetPassword from \"./resetPassword\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    form: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    resetPassword: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    resetPasswordValidation: false\r\n    // validation: false\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkValidity(value, validated, name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.form\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      form: newForm\r\n    });\r\n  };\r\n\r\n  handleInputOnChangePassword = e => {\r\n    const newForm = {\r\n      ...this.state.resetPassword\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      resetPassword: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    this.props.login_validation_change(true);\r\n\r\n    if (this.state.form.email.validated && this.state.form.password.validated) {\r\n      this.props.onAuth(\r\n        this.state.form.email.value,\r\n        this.state.form.password.value,\r\n        false\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOnClickResetPassword = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      resetPasswordValidation: true\r\n    });\r\n    if (this.state.resetPassword.email.validated) {\r\n      this.props.onAuth_Reset_Password(this.state.resetPassword.email.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.state;\r\n    const changePage = this.props.signed ? <Redirect to=\"/\" /> : null;\r\n    const errorMessage = this.props.errorLogin ? (\r\n      <Modal\r\n        name=\"Zły login lub hasło.\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.is_error_login(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Zły login lub hasło.\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.is_error_login(false)}\r\n      />\r\n    );\r\n\r\n    const modalErrorEmail = () => {\r\n      if (this.props.errorResetPassword === true) {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={true}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      } else if (this.props.errorResetPassword === false) {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={true}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    const formInputs = [\r\n      {\r\n        id: 1,\r\n        formName: \"Adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny e-mail\",\r\n        formValidation: this.props.loginValidation,\r\n        itemValidation: form.email.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.email.value,\r\n        itemName: \"email\",\r\n        itemType: \"text\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.props.loginValidation,\r\n        itemValidation: form.password.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      }\r\n    ];\r\n\r\n    const formInputsMap = formInputs.map(item => (\r\n      <FormItem\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className={this.props.loginVisible ? \"login loginDown\" : \"login\"}>\r\n        {modalErrorEmail()}\r\n        {changePage}\r\n        {errorMessage}\r\n\r\n        <div className=\"container positionRelative \">\r\n          <ClosePage onClick={this.props.login_visible} />\r\n          <LoginAccount\r\n            inputs={formInputsMap}\r\n            handleResetPassword={this.props.reset_password_visible}\r\n            handleOnClickSave={this.handleOnClickSave}\r\n            resetPasswordVisible={this.props.resetPasswordVisible}\r\n          />\r\n\r\n          <ResetPassword\r\n            resetPasswordVisible={this.props.resetPasswordVisible}\r\n            reset_password_visible={this.props.reset_password_visible}\r\n            resetPasswordValidation={this.state.resetPasswordValidation}\r\n            resetPassword={this.state.resetPassword}\r\n            handleInputOnChangePassword={this.handleInputOnChangePassword}\r\n            handleOnClickResetPassword={this.handleOnClickResetPassword}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.login,\r\n    signed: state.signed,\r\n    errorLogin: state.errorLogin,\r\n    loginVisible: state.loginVisible,\r\n    errorNetwork: state.errorNetwork,\r\n    resetPasswordVisible: state.resetPasswordVisible,\r\n    errorResetPassword: state.errorResetPassword,\r\n    loginValidation: state.loginValidation\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    is_error_login: value => dispatch(actionTypes.is_error_login(value)),\r\n    login_visible: () => dispatch(actionTypes.login_visible()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    reset_password_visible: () =>\r\n      dispatch(actionTypes.reset_password_visible()),\r\n    onAuth_Reset_Password: email =>\r\n      dispatch(actionTypes.onAuth_Reset_Password(email)),\r\n    error_reset_password: value =>\r\n      dispatch(actionTypes.error_reset_password(value)),\r\n    login_validation_change: value =>\r\n      dispatch(actionTypes.login_validation_change(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport FormItem from \"../elements/formElement/formElement\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    form: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      passwordSecond: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      regulations: {\r\n        value: false,\r\n        validated: null\r\n      }\r\n    },\r\n    // validation: false,\r\n    message: \"\"\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (newState.form.password.value.length && nextProps.registrationVisible) {\r\n      if (newState.form.password.value !== newState.form.passwordSecond.value) {\r\n        newState.form.passwordSecond.validated = false;\r\n      } else {\r\n        newState.form.passwordSecond.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name, newPassword, newPasswordSecond) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"passwordSecond\") {\r\n      isValid = newPassword === value ? true : false;\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.form\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name,\r\n        newForm.password.value,\r\n        newForm.passwordSecond.value\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      form: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    // this.setState({\r\n    //   validation: true\r\n    // });\r\n    this.props.registration_validation_change(true);\r\n    if (\r\n      this.state.form.email.validated &&\r\n      this.state.form.password.validated &&\r\n      this.state.form.passwordSecond.validated &&\r\n      this.state.form.regulations.validated\r\n    ) {\r\n      this.props.isSigned(false);\r\n      this.props.onAuth(\r\n        this.state.form.email.value,\r\n        this.state.form.password.value,\r\n        true\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.state;\r\n    const changePage = this.props.newAccount ? <Redirect to=\"/\" /> : null;\r\n    const errorMessage = this.props.errorAccount ? (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={true}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={false}\r\n      />\r\n    );\r\n\r\n    const formInputs = [\r\n      {\r\n        id: 1,\r\n        formName: \"Adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny e-mail\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.email.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.email.value,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.password.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz hasło:\",\r\n        itemFalseName: \"Hasłą nie są identyczne\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: this.state.form.passwordSecond\r\n          ? form.passwordSecond.validated\r\n          : this.state.form.passwordSecond.value ===\r\n            this.state.form.password.value,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.passwordSecond.value,\r\n        itemName: \"passwordSecond\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 4,\r\n        formName: \"Regulamin*:\",\r\n        itemFalseName: \"Zaakceptuj regulamin\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.regulations.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: false,\r\n        itemName: \"regulations\",\r\n        itemType: \"checkbox\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: form.regulations.value\r\n      }\r\n    ];\r\n\r\n    const formInputsMap = formInputs.map(item => (\r\n      <FormItem\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n      />\r\n    ));\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.registrationVisible\r\n            ? \"registration registrationDown\"\r\n            : \"registration\"\r\n        }\r\n      >\r\n        {changePage}\r\n        {errorMessage}\r\n\r\n        <div className=\"container positionRelative\">\r\n          <ClosePage onClick={this.props.registration_visible} />\r\n          <Title name=\"ZAŁÓŻ KONTO\" />\r\n          {formInputsMap}\r\n        </div>\r\n        <div className=\"text-center \">\r\n          <FormButton\r\n            buttonName=\"Utwórz konto\"\r\n            buttonOnClick={this.handleOnClickSave}\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.login,\r\n    signed: state.signed,\r\n    newAccount: state.newAccount,\r\n    errorAccount: state.errorAccount,\r\n    registrationVisible: state.registrationVisible,\r\n    errorNetwork: state.errorNetwork,\r\n    registrationValidation: state.registrationValidation\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    isSigned: value => dispatch(actionTypes.is_signed(value)),\r\n    is_error_account: value => dispatch(actionTypes.is_error_account(value)),\r\n    registration_visible: () => dispatch(actionTypes.registration_visible()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    registration_validation_change: value =>\r\n      dispatch(actionTypes.registration_validation_change(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from \"react\";\r\nconst spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"positionSpinner\">\r\n        <div className=\"loader\">Loading...</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport * as axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    userOrders: null\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   if (this.props.userId) {\r\n  //     this.props.get_order(this.props.userId, this.props.userToken);\r\n  //   }\r\n  // }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.userId && this.props.orderVisible === true) {\r\n      // setTimeout(() => {\r\n      let url =\r\n        \"https://apartment-3c7b9.firebaseio.com/orders.json?auth=\" +\r\n        prevProps.userToken +\r\n        '&orderBy=\"userId\"&equalTo=\"' +\r\n        prevProps.userId +\r\n        '\"';\r\n      axios\r\n        .get(url)\r\n        .then(response => {\r\n          console.log(response);\r\n          const values = Object.values(response.data);\r\n          values.sort((a, b) => {\r\n            const x = a.date;\r\n            const y = b.date;\r\n            return x < y ? -1 : x > y ? 1 : 0;\r\n          });\r\n\r\n          this.setState({\r\n            userOrders: values\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          // if (error.request.status === 0) {\r\n          //   dispatch(error_network(true));\r\n          // } else {\r\n          // dispatch(error_reset_password(false));\r\n          // }\r\n          // dispatch(spinner(false));\r\n        });\r\n      // }, 1000);\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (\r\n  //     nextProps.orderVisible !== this.props.orderVisible ||\r\n  //     nextState !== this.state\r\n  //   ) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    let mapOrders = null;\r\n    if (this.state.userOrders) {\r\n      mapOrders = this.state.userOrders.map((item, index) => (\r\n        <tr key={index} className=\"text-center\">\r\n          <th scope=\"row\">{index + 1}</th>\r\n          <td>{item.date}</td>\r\n          <td>\r\n            {item.timeDay && item.timeNight\r\n              ? \"10:00\"\r\n              : item.timeDay\r\n              ? \"10:00\"\r\n              : \"18:00\"}\r\n          </td>\r\n          <td>\r\n            {item.timeDay && item.timeNight\r\n              ? \"03:00\"\r\n              : item.timeDay\r\n              ? \"17:00\"\r\n              : \"03:00\"}\r\n          </td>\r\n          <td>{item.price} zł</td>\r\n        </tr>\r\n      ));\r\n    }\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.orderVisible\r\n            ? \"registration registrationDown scrollbar scrollbar-primary\"\r\n            : \"registration scrollbar scrollbar-primary\"\r\n        }\r\n      >\r\n        <div className=\"container positionRelative\">\r\n          <ClosePage onClick={this.props.order_visible} />\r\n          <Title name=\"ZAMÓWIENIA\" />\r\n\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-dark\">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Data</th>\r\n                  <th scope=\"col\">Godzina rozpoczęcia</th>\r\n                  <th scope=\"col\">Godzina zakończenia</th>\r\n                  <th scope=\"col\">Cena (bez kaucji)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{mapOrders}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"text-center margin-90\">\r\n            <FormButton\r\n              buttonName=\"Zamknij\"\r\n              buttonOnClick={this.props.order_visible}\r\n              buttonColor=\"red\"\r\n              buttonInline={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orderVisible: state.orderVisible,\r\n    userId: state.userId,\r\n    userToken: state.userToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    order_visible: () => dispatch(actionTypes.order_visible()),\r\n    get_order: userId => dispatch(actionTypes.get_order(userId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nconst changeEmail = ({\r\n  inputs,\r\n  handleOnClickSave,\r\n  changeEmailVisible,\r\n  change_email_visible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        changeEmailVisible === true\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <Title name=\"ZMIEŃ E-MAIL\" />\r\n      {inputs}\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Powrót\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={change_email_visible}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Zatwierdź\"\r\n          buttonColor=\"gray\"\r\n          buttonInline={true}\r\n          buttonOnClick={handleOnClickSave}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default changeEmail;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nconst changePassword = ({\r\n  inputs,\r\n  handleOnClickSavePassword,\r\n  changePasswordVisible,\r\n  change_password_visible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        changePasswordVisible === true\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <Title name=\"ZMIEŃ HASŁO\" />\r\n      {inputs}\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Powrót\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={change_password_visible}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Zatwierdź\"\r\n          buttonColor=\"gray\"\r\n          buttonInline={true}\r\n          buttonOnClick={handleOnClickSavePassword}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default changePassword;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\n\r\nconst deleteAccount = ({\r\n  deleteAccountConfirm,\r\n  validationDeleteAccount,\r\n  validated,\r\n  handleInputOnChange,\r\n  value,\r\n  delete_account_confirm,\r\n  handleOnClickSaveDeleteAccount\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        deleteAccountConfirm\r\n          ? \"loginAccount loginAccountDown mt-3\"\r\n          : \"loginAccount mt-3\"\r\n      }\r\n    >\r\n      <Title name=\"USUŃ KONTO\" />\r\n      <div className=\"container\">\r\n        <FormElement\r\n          formName=\"Podaj hasło\"\r\n          itemFalseName=\"Błędne hasło\"\r\n          formValidation={validationDeleteAccount}\r\n          itemValidation={validated}\r\n          itemOnChange={handleInputOnChange}\r\n          itemValue={value}\r\n          itemName=\"password\"\r\n          itemType=\"password\"\r\n          itemPlaceholder=\"\"\r\n          itemChecked={null}\r\n          disabled={false}\r\n        />\r\n      </div>\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Wróć\"\r\n          buttonColor=\"green\"\r\n          buttonInline={true}\r\n          buttonOnClick={delete_account_confirm}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Usuń\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={\r\n            // this.props.delete_account(this.props.userToken)\r\n            handleOnClickSaveDeleteAccount\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default deleteAccount;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport ChangeEmail from \"./changeEmail\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport ChangePassword from \"./changePassword\";\r\nimport DeleteAccount from \"./deleteAccount\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formEmail: {\r\n      email: {\r\n        value: \"\",\r\n        validated: true\r\n      },\r\n      newEmail: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formPassword: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPassword: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPasswordAgain: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formDeleteAccount: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    validationEmail: false,\r\n    validationPassword: false,\r\n    validationDeleteAccount: false\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.newPassword.value !==\r\n        newState.formPassword.newPasswordAgain.value\r\n      ) {\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n      } else {\r\n        newState.formPassword.newPasswordAgain.validated = true;\r\n      }\r\n    }\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      newState.formPassword.password.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.password.value ===\r\n        newState.formPassword.newPassword.value\r\n      ) {\r\n        newState.formPassword.newPassword.validated = false;\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n        newState.formPassword.password.validated = false;\r\n      } else {\r\n        newState.formPassword.newPassword.validated = true;\r\n        newState.formPassword.password.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\" || name === \"newPassword\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"newPasswordAgain\") {\r\n      isValid =\r\n        this.state.formPassword.newPassword.value === value && value.length >= 6\r\n          ? true\r\n          : false;\r\n    }\r\n\r\n    if (name === \"newEmail\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && this.props.userEmail !== value;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    console.log(this.state.validationDeleteAccount);\r\n    const newForm = {\r\n      ...this.state.formDeleteAccount\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formDeleteAccount: newForm,\r\n      validationDeleteAccount: true\r\n    });\r\n  };\r\n\r\n  handleInputOnChangeEmail = e => {\r\n    const newForm = {\r\n      ...this.state.formEmail\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formEmail: newForm\r\n    });\r\n  };\r\n\r\n  handleInputOnChangePassword = e => {\r\n    const newForm = {\r\n      ...this.state.formPassword\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formPassword: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSaveDeleteAccount = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationDeleteAccount ? true : true;\r\n    this.setState({\r\n      validationDeleteAccount: validation\r\n    });\r\n\r\n    if (this.state.formDeleteAccount.password.validated && validation) {\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formDeleteAccount.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationDeleteAccount: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationEmail ? true : true;\r\n    this.setState({\r\n      validationEmail: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formEmail.newEmail.validated &&\r\n      validation &&\r\n      this.state.formEmail.password.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formEmail.password.value,\r\n        this.props.userToken,\r\n        this.state.formEmail.newEmail.value,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.newEmail.value = \"\";\r\n      newForm.newEmail.validated = false;\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationEmail: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSavePassword = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationPassword ? true : true;\r\n    this.setState({\r\n      validationPassword: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formPassword.password.validated &&\r\n      validation &&\r\n      this.state.formPassword.newPassword.validated &&\r\n      this.state.formPassword.newPasswordAgain.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formPassword.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        this.state.formPassword.newPassword.value\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formPassword };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      newForm.newPassword.value = \"\";\r\n      newForm.newPassword.validated = false;\r\n      newForm.newPasswordAgain.value = \"\";\r\n      newForm.newPasswordAgain.validated = false;\r\n      this.setState({\r\n        validationPassword: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEmailVisible = () => {\r\n    this.props.change_email_visible();\r\n    let newForm = { ...this.state.formEmail };\r\n    newForm.newEmail.value = \"\";\r\n    newForm.newEmail.validated = false;\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationEmail: false\r\n    });\r\n  };\r\n\r\n  handlePasswordVisible = () => {\r\n    this.props.change_password_visible();\r\n    let newForm = { ...this.state.formPassword };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    newForm.newPassword.value = \"\";\r\n    newForm.newPassword.validated = false;\r\n    newForm.newPasswordAgain.value = \"\";\r\n    newForm.newPasswordAgain.validated = false;\r\n    this.setState({\r\n      validationPassword: false\r\n    });\r\n  };\r\n\r\n  handleDeleteAccountVisible = () => {\r\n    this.props.delete_account_confirm();\r\n    let newForm = { ...this.state.formDeleteAccount };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationDeleteAccount: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formEmail, formPassword } = this.state;\r\n    const changePage = this.props.signed ? <Redirect to=\"/\" /> : null;\r\n    const modalChangeEmail = this.props.changeEmail ? (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangePassword = this.props.errorResetPassword ? (\r\n      <Modal\r\n        modalError={false}\r\n        name={`Wiadomość z linkiem do zmiany hasła został wysłany na adres ${this.props.userEmail}`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.error_reset_password(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name={`Wiadomość z linkiem do zmiany hasła został wysłany na adres ${this.props.userEmail}`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.error_reset_password(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangeEmailBusy = this.props.changeEmailBusy ? (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    );\r\n\r\n    const formChangeEmail = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualny adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-mail\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.email.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: this.props.userEmail,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: true\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowy adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-maila\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.newEmail.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.newEmail.value,\r\n        itemName: \"newEmail\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.password.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formChangePassword = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualne hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.password.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPassword.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPassword.value,\r\n        itemName: \"newPassword\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPasswordAgain.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPasswordAgain.value,\r\n        itemName: \"newPasswordAgain\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formEmailsMap = formChangeEmail.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n\r\n    const formPasswordsMap = formChangePassword.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.settingsAccountVisible ? \"login loginDown \" : \"login \"\r\n        }\r\n      >\r\n        {changePage}\r\n        {modalChangeEmail}\r\n        {modalChangePassword}\r\n        {modalChangeEmailBusy}\r\n\r\n        <div className=\"container positionRelative\">\r\n          <ClosePage onClick={this.props.settings_account_visible} />\r\n          <div\r\n            className={\r\n              this.props.changeEmailVisible === false &&\r\n              this.props.changePasswordVisible === false &&\r\n              this.props.deleteAccountConfirm === false\r\n                ? \"loginAccount loginAccountDown \"\r\n                : \"loginAccount\"\r\n            }\r\n          >\r\n            <Title name=\"USTAWIENIA KONTA\" />\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Zmień adres e-mail\"\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n                buttonOnClick={this.props.change_email_visible}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Zmień hasło\"\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n                // buttonOnClick={() =>\r\n                //   this.props.onAuth_Reset_Password(this.props.userEmail)\r\n                // }\r\n                buttonOnClick={() => this.props.change_password_visible(true)}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Usuń konto\"\r\n                buttonColor=\"red\"\r\n                buttonInline={true}\r\n                buttonOnClick={this.props.delete_account_confirm}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ChangeEmail\r\n          inputs={formEmailsMap}\r\n          handleOnClickSave={this.handleOnClickSave}\r\n          changeEmailVisible={this.props.changeEmailVisible}\r\n          change_email_visible={this.handleEmailVisible}\r\n        />\r\n        <ChangePassword\r\n          inputs={formPasswordsMap}\r\n          handleOnClickSavePassword={this.handleOnClickSavePassword}\r\n          changePasswordVisible={this.props.changePasswordVisible}\r\n          change_password_visible={this.handlePasswordVisible}\r\n        />\r\n        <DeleteAccount\r\n          deleteAccountConfirm={this.props.deleteAccountConfirm}\r\n          validationDeleteAccount={this.state.validationDeleteAccount}\r\n          validated={this.state.formDeleteAccount.password.validated}\r\n          handleInputOnChange={this.handleInputOnChange}\r\n          value={this.state.formDeleteAccount.password.value}\r\n          delete_account_confirm={this.handleDeleteAccountVisible}\r\n          handleOnClickSaveDeleteAccount={this.handleOnClickSaveDeleteAccount}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    signed: state.signed,\r\n    errorLogin: state.errorLogin,\r\n    settingsAccountVisible: state.settingsAccountVisible,\r\n    userEmail: state.userEmail,\r\n    userToken: state.userToken,\r\n    userId: state.userId,\r\n    changeEmailVisible: state.changeEmailVisible,\r\n    deleteAccountConfirm: state.deleteAccountConfirm,\r\n    changeEmail: state.changeEmail,\r\n    errorResetPassword: state.errorResetPassword,\r\n    changeEmailBusy: state.changeEmailBusy,\r\n    changePasswordVisible: state.changePasswordVisible\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    is_error_login: value => dispatch(actionTypes.is_error_login(value)),\r\n    settings_account_visible: () =>\r\n      dispatch(actionTypes.settings_account_visible()),\r\n    delete_account: userToken =>\r\n      dispatch(actionTypes.delete_account(userToken)),\r\n    onAuth_Reset_Password: email =>\r\n      dispatch(actionTypes.onAuth_Reset_Password(email)),\r\n    change_email: (userId, newEmail, email) =>\r\n      dispatch(actionTypes.change_email(userId, newEmail, email)),\r\n    change_email_visible: () => dispatch(actionTypes.change_email_visible()),\r\n    delete_account_confirm: () =>\r\n      dispatch(actionTypes.delete_account_confirm()),\r\n    change_email_bool: value => dispatch(actionTypes.change_email_bool(value)),\r\n    error_reset_password: value =>\r\n      dispatch(actionTypes.error_reset_password(value)),\r\n    change_email_busy: value => dispatch(actionTypes.change_email_busy(value)),\r\n    authCheckPassword: (email, password, userToken, newEmail, newPassword) =>\r\n      dispatch(\r\n        actionTypes.authCheckPassword(\r\n          email,\r\n          password,\r\n          userToken,\r\n          newEmail,\r\n          newPassword\r\n        )\r\n      ),\r\n    change_password_visible: () =>\r\n      dispatch(actionTypes.change_password_visible())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\n\r\nclass Summary extends Component {\r\n  handleOrder = price => {\r\n    this.props.add_new_disabled_data(\r\n      this.props.orderValue.date,\r\n      this.props.orderValue.timeDay,\r\n      this.props.orderValue.timeNight,\r\n      \"actualReservation\",\r\n      this.props.orderValue.objectName,\r\n      this.props.userId,\r\n      this.props.disabledDataValue,\r\n      price\r\n    );\r\n    // this.props.order_accept(false, true);\r\n  };\r\n\r\n  render() {\r\n    let dayMonth = new Date(this.props.orderValue.date);\r\n    dayMonth = dayMonth.getDay() + 1; //6 - piątek, 2- poniedziałek\r\n    let timeStartReservation = \"\";\r\n    let timeEndReservation = \"\";\r\n    let price = \"\";\r\n    let summary = \"\";\r\n    const bazePrice = 500;\r\n    const weekBazePrice = 1000;\r\n    const rentCost = 1000;\r\n    const classSummary = !this.props.orderAccept\r\n      ? \"summary\"\r\n      : \"summary summaryDown\";\r\n    if (this.props.orderValue.filterArray) {\r\n      if (!this.props.orderValue.filterArray[0][1].timeDay) {\r\n        timeStartReservation = \"10:00\";\r\n        timeEndReservation = \"17:00\";\r\n        price = dayMonth < 6 && dayMonth >= 2 ? bazePrice : weekBazePrice;\r\n        summary =\r\n          dayMonth < 6 && dayMonth >= 2\r\n            ? bazePrice + rentCost\r\n            : weekBazePrice + rentCost;\r\n      } else {\r\n        timeStartReservation = \"19:00\";\r\n        timeEndReservation = \"03:00\";\r\n        price = dayMonth < 6 && dayMonth >= 2 ? bazePrice : weekBazePrice;\r\n        summary =\r\n          dayMonth < 6 && dayMonth >= 2\r\n            ? bazePrice + rentCost\r\n            : weekBazePrice + rentCost;\r\n      }\r\n    } else {\r\n      if (this.props.orderValue.timeDay && this.props.orderValue.timeNight) {\r\n        timeStartReservation = \"10:00\";\r\n        timeEndReservation = \"03:00\";\r\n        price =\r\n          dayMonth < 6 && dayMonth >= 2 ? bazePrice * 2 : weekBazePrice * 2;\r\n        summary =\r\n          dayMonth < 6 && dayMonth >= 2\r\n            ? bazePrice * 2 + rentCost\r\n            : weekBazePrice * 2 + rentCost;\r\n      } else if (this.props.orderValue.timeDay) {\r\n        timeStartReservation = \"10:00\";\r\n        timeEndReservation = \"17:00\";\r\n        price = dayMonth < 6 && dayMonth >= 2 ? bazePrice : weekBazePrice;\r\n        summary =\r\n          dayMonth < 6 && dayMonth >= 2\r\n            ? bazePrice + rentCost\r\n            : weekBazePrice + rentCost;\r\n      } else if (this.props.orderValue.timeNight) {\r\n        timeStartReservation = \"17:00\";\r\n        timeEndReservation = \"03:00\";\r\n        price = dayMonth < 6 && dayMonth >= 2 ? bazePrice : weekBazePrice;\r\n        summary =\r\n          dayMonth < 6 && dayMonth >= 2\r\n            ? bazePrice + rentCost\r\n            : weekBazePrice + rentCost;\r\n      }\r\n    }\r\n    return (\r\n      <div className={classSummary}>\r\n        <div className=\"container positionRelative mt-4\">\r\n          <ClosePage onClick={() => this.props.order_accept(false)} />\r\n          <Title name=\"PODSUMOWANIE\" />\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row summaryTableFirst\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8\">\r\n                  Dzień rezerwacji:\r\n                </div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  {this.props.orderValue.date}\r\n                </div>\r\n              </div>{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className=\"row summaryTable\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8\">\r\n                  Czas rozpoczęcia rezerwacji:\r\n                </div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  {timeStartReservation}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row summaryTable\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8\">\r\n                  Czas zakończenia rezerwacji:\r\n                </div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  {timeEndReservation}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row summaryTable\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8\">Cena:</div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  {price} zł\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row summaryTable\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8 \">\r\n                  Kaucja(zwrotna przy oddaniu lokalu):\r\n                </div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  1000 zł\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row summaryTable\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"offset-md-2 col-md-5 col-8 \">Suma:</div>\r\n                <div className=\"col-md-5 col-4 text-center font-weight-bold text-success\">\r\n                  {summary} zł\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center margin-top-40\">\r\n            <FormButton\r\n              buttonName=\"Cofnij\"\r\n              buttonOnClick={() => this.props.order_accept(false)}\r\n              buttonColor=\"red\"\r\n              buttonInline={true}\r\n            />\r\n            <FormButton\r\n              buttonName=\"Zapłać\"\r\n              buttonOnClick={() => this.handleOrder(price)}\r\n              buttonColor=\"green\"\r\n              buttonInline={true}\r\n            />\r\n          </div>\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orderAccept: state.orderAccept,\r\n    orderValue: state.orderValue,\r\n    userId: state.userId,\r\n    disabledDataValue: state.disabledDataValue\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    get_disabled_date: () => dispatch(actionTypes.get_disabled_date()),\r\n    order_accept: (value, orderVisible) =>\r\n      dispatch(actionTypes.order_accept(value)),\r\n    add_new_disabled_data: (\r\n      date,\r\n      timeDay,\r\n      timeNight,\r\n      actualReservation,\r\n      actualObjectName,\r\n      userId,\r\n      disabledDataValue,\r\n      price\r\n    ) =>\r\n      dispatch(\r\n        actionTypes.add_new_disabled_data(\r\n          date,\r\n          timeDay,\r\n          timeNight,\r\n          actualReservation,\r\n          actualObjectName,\r\n          userId,\r\n          disabledDataValue,\r\n          price\r\n        )\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Summary);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport Section from \"./component/section\";\r\nimport * as actionTypes from \"./store/actions\";\r\nimport \"./scss/app.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Footer from \"./component/footer\";\r\nimport Nav from \"./component/nav\";\r\nimport Header from \"./component/header\";\r\nimport Login from \"./component/login\";\r\nimport Registration from \"./component/registration\";\r\nimport Spinner from \"./elements/Spinner/Spinner\";\r\nimport Orders from \"./component/orders\";\r\nimport AccountSettings from \"./component/accountSettings\";\r\nimport Modal from \"./elements/Modal/Modal\";\r\nimport Summary from \"./component/summary\";\r\n\r\nclass App extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.authChechState();\r\n  }\r\n\r\n  render() {\r\n    const spinner = this.props.spinner ? <Spinner /> : null;\r\n    const modalNetwork = this.props.errorNetwork ? (\r\n      <Modal\r\n        name=\"Brak internetu\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.error_network(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Brak internetu\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.error_network(false)}\r\n      />\r\n    );\r\n\r\n    const modalDeleteAccount = this.props.deleteAccount ? (\r\n      <Modal\r\n        name=\"Konto zostało usunięte\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.delete_account_bool(false)}\r\n        modalError={false}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Konto zostało usunięte\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.delete_account_bool(false)}\r\n        modalError={false}\r\n      />\r\n    );\r\n\r\n    const modalNewAccount = this.props.newAccount ? (\r\n      <Modal\r\n        name=\"Nowe konto zostało utworzone\"\r\n        modalError={false}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.is_newAccount(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Nowe konto zostało utworzone\"\r\n        modalError={false}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.is_newAccount(false)}\r\n      />\r\n    );\r\n    return (\r\n      <div className=\"App \">\r\n        {spinner}\r\n        <BrowserRouter>\r\n          <Nav />\r\n          {/* JEZELI UZYTKOWNIK JEST ZALOGOWANY!! */}\r\n          <div className=\"overflowHidden\">\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={Summary}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n          </div>\r\n          <div className=\"positionRelative \">\r\n            {modalNetwork}\r\n            {modalDeleteAccount}\r\n            {modalNewAccount}\r\n            <Route\r\n              path=\"/\"\r\n              component={Login}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              component={Registration}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              component={Orders}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              component={AccountSettings}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={Header}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={Section}\r\n              basename={process.env.PUBLIC_URL}\r\n            />\r\n          </div>\r\n\r\n          <Footer />\r\n\r\n          <Redirect to=\"/\" />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    spinner: state.spinner,\r\n    errorNetwork: state.errorNetwork,\r\n    deleteAccount: state.deleteAccount,\r\n    newAccount: state.newAccount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authChechState: () => dispatch(actionTypes.authChechState()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    delete_account_bool: value =>\r\n      dispatch(actionTypes.delete_account_bool(value)),\r\n    is_newAccount: value => dispatch(actionTypes.is_newAccount(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./store/reducer\";\r\nimport App from \"./App\";\r\n\r\n// const logger = store => {\r\n//   return next => {\r\n//     return action => {\r\n//       // console.log(\"Action: \", action); //pokazuje akcję, która została wykonana przy zmianie stanu w redux\r\n//       // console.log(\"New state:\", store.getState()); //Pokazuje zaktualizowany stan w redux, jeżeli zmienimy wynik jakieś zmiennej\r\n//       const result = next(action);\r\n//       return result;\r\n//     };\r\n//   };\r\n// };\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/1.73c55abc.JPG\";","module.exports = __webpack_public_path__ + \"static/media/2.aaca8e48.JPG\";","module.exports = __webpack_public_path__ + \"static/media/3.12568a86.JPG\";","module.exports = __webpack_public_path__ + \"static/media/4.178e0426.JPG\";","module.exports = __webpack_public_path__ + \"static/media/5.9a975771.JPG\";","module.exports = __webpack_public_path__ + \"static/media/6.b4ac3bbf.JPG\";","module.exports = __webpack_public_path__ + \"static/media/7.697bf786.JPG\";","module.exports = __webpack_public_path__ + \"static/media/8.5d3182a5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/9.7d9d78b1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/10.8580c889.JPG\";","module.exports = __webpack_public_path__ + \"static/media/11.76f28d89.JPG\";","module.exports = __webpack_public_path__ + \"static/media/video.fbaab6bb.mp4\";"],"sourceRoot":""}