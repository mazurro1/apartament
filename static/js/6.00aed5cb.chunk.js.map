{"version":3,"sources":["elements/Input/Input.js","elements/formElement/formElement.js","component/registration.js"],"names":["input","_ref","type","checked","onChange","name","value","placeholder","className","disabled","inputs","react_default","a","createElement","concat","Fragment","formElement","_ref$itemName","itemName","_ref$formName","formName","itemFalseName","_ref$formValidation","formValidation","_ref$itemValidation","itemValidation","_ref$itemValue","itemValue","itemOnChange","itemType","_ref$itemPlaceholder","itemPlaceholder","_ref$itemChecked","itemChecked","_ref$disabled","Input","Registration","state","form","email","validated","password","passwordSecond","regulations","message","handleInputOnChange","e","newForm","Object","C_Users_user_Desktop_apartament_apartament_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this","updateFormElement","target","checkValidity","setState","handleOnClickSave","preventDefault","props","registration_validation_change","isSigned","onAuth","nextProps","nextState","this","newPassword","newPasswordSecond","isValid","length","test","_this2","changePage","newAccount","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","errorMessage","errorAccount","_elements_Modal_Modal__WEBPACK_IMPORTED_MODULE_11__","onClickButton","is_error_account","modalOn","formInputsMap","id","registrationValidation","map","item","_elements_formElement_formElement__WEBPACK_IMPORTED_MODULE_13__","key","react_transition_group_CSSTransition__WEBPACK_IMPORTED_MODULE_15__","in","registrationVisible","timeout","animationTiming","mountOnEnter","unmountOnExit","classNames","_elements_closePage_closePage__WEBPACK_IMPORTED_MODULE_12__","onClick","registration_visible","_elements_Title_Title__WEBPACK_IMPORTED_MODULE_7__","_elements_formButton_FormButton__WEBPACK_IMPORTED_MODULE_14__","buttonName","buttonOnClick","buttonColor","buttonInline","prevState","newState","Component","connect","login","signed","errorNetwork","dispatch","isSignUp","actionTypes","error_network"],"mappings":"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","file":"static/js/6.00aed5cb.chunk.js","sourcesContent":["import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport FormItem from \"../elements/formElement/formElement\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    form: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      passwordSecond: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      regulations: {\r\n        value: false,\r\n        validated: null\r\n      }\r\n    },\r\n    // validation: false,\r\n    message: \"\"\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (newState.form.password.value.length && nextProps.registrationVisible) {\r\n      if (newState.form.password.value !== newState.form.passwordSecond.value) {\r\n        newState.form.passwordSecond.validated = false;\r\n      } else {\r\n        newState.form.passwordSecond.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name, newPassword, newPasswordSecond) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"passwordSecond\") {\r\n      isValid = newPassword === value ? true : false;\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.form\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name,\r\n        newForm.password.value,\r\n        newForm.passwordSecond.value\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      form: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    // this.setState({\r\n    //   validation: true\r\n    // });\r\n    this.props.registration_validation_change(true);\r\n    if (\r\n      this.state.form.email.validated &&\r\n      this.state.form.password.validated &&\r\n      this.state.form.passwordSecond.validated &&\r\n      this.state.form.regulations.validated\r\n    ) {\r\n      this.props.isSigned(false);\r\n      this.props.onAuth(\r\n        this.state.form.email.value,\r\n        this.state.form.password.value,\r\n        true\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.state;\r\n    const changePage = this.props.newAccount ? <Redirect to=\"/\" /> : null;\r\n    const errorMessage = this.props.errorAccount ? (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={true}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Podany e-mail już istnieje.\"\r\n        onClickButton={() => this.props.is_error_account(false)}\r\n        modalOn={false}\r\n      />\r\n    );\r\n\r\n    const formInputs = [\r\n      {\r\n        id: 1,\r\n        formName: \"Adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny e-mail\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.email.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.email.value,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.password.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz hasło:\",\r\n        itemFalseName: \"Hasłą nie są identyczne\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: this.state.form.passwordSecond\r\n          ? form.passwordSecond.validated\r\n          : this.state.form.passwordSecond.value ===\r\n            this.state.form.password.value,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.passwordSecond.value,\r\n        itemName: \"passwordSecond\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 4,\r\n        formName: \"Regulamin*:\",\r\n        itemFalseName: \"Zaakceptuj regulamin\",\r\n        formValidation: this.props.registrationValidation,\r\n        itemValidation: form.regulations.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: false,\r\n        itemName: \"regulations\",\r\n        itemType: \"checkbox\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: form.regulations.value\r\n      }\r\n    ];\r\n\r\n    const formInputsMap = formInputs.map(item => (\r\n      <FormItem\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n      />\r\n    ));\r\n    return (\r\n      <CSSTransition\r\n        in={this.props.registrationVisible}\r\n        timeout={this.props.animationTiming}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        classNames=\"animationLeft\"\r\n      >\r\n        <div className=\"pagePosition\">\r\n          {changePage}\r\n          {errorMessage}\r\n\r\n          <div className=\"container positionRelative\">\r\n            <ClosePage onClick={this.props.registration_visible} />\r\n            <div className=\"pt-1\">\r\n              <Title name=\"ZAŁÓŻ KONTO\" />\r\n              {formInputsMap}\r\n            </div>\r\n            <div className=\"text-center \">\r\n              <FormButton\r\n                buttonName=\"Utwórz konto\"\r\n                buttonOnClick={this.handleOnClickSave}\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.login,\r\n    signed: state.signed,\r\n    newAccount: state.newAccount,\r\n    errorAccount: state.errorAccount,\r\n    registrationVisible: state.registrationVisible,\r\n    errorNetwork: state.errorNetwork,\r\n    registrationValidation: state.registrationValidation,\r\n    animationTiming: state.animationTiming\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    isSigned: value => dispatch(actionTypes.is_signed(value)),\r\n    is_error_account: value => dispatch(actionTypes.is_error_account(value)),\r\n    registration_visible: () => dispatch(actionTypes.registration_visible()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    registration_validation_change: value =>\r\n      dispatch(actionTypes.registration_validation_change(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Registration);\r\n"],"sourceRoot":""}