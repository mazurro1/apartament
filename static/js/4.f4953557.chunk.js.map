{"version":3,"sources":["elements/Input/Input.js","elements/formElement/formElement.js","component/changeEmail.js","component/changePassword.js","component/deleteAccount.js","component/accountSettings.js"],"names":["input","type","checked","onChange","name","value","placeholder","className","disabled","inputs","formElement","itemName","formName","itemFalseName","formValidation","itemValidation","itemValue","itemOnChange","itemType","itemPlaceholder","itemChecked","Input","changeEmail","handleOnClickSave","changeEmailVisible","change_email_visible","Title","FormButton","buttonName","buttonColor","buttonInline","buttonOnClick","changePassword","handleOnClickSavePassword","changePasswordVisible","change_password_visible","deleteAccount","deleteAccountConfirm","validationDeleteAccount","validated","handleInputOnChange","delete_account_confirm","handleOnClickSaveDeleteAccount","Login","state","formEmail","email","newEmail","password","formPassword","newPassword","newPasswordAgain","formDeleteAccount","validationEmail","validationPassword","e","newForm","updateFormElement","target","checkValidity","setState","handleInputOnChangeEmail","handleInputOnChangePassword","preventDefault","validation","props","authCheckPassword","userEmail","userToken","handleEmailVisible","handlePasswordVisible","handleDeleteAccountVisible","nextProps","nextState","this","isValid","length","test","changePage","signed","to","modalChangeEmail","Modal","modalError","modalOn","onClickButton","change_email_bool","modalChangePassword","change_password_bool","modalChangeEmailBusy","changeEmailBusy","change_email_busy","modalBadPassword","badPassword","bad_password","formChangeEmail","id","formChangePassword","formEmailsMap","map","item","key","formPasswordsMap","settingsAccountVisible","onClick","settings_account_visible","prevState","newState","Component","connect","errorLogin","userId","dispatch","onAuth","isSignUp","actionTypes","is_error_login","delete_account","onAuth_Reset_Password","change_email","error_reset_password"],"mappings":"0IAmCeA,EAlCD,SAAC,GASR,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,SACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMC,EACK,aAATR,EACE,2BACEC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNH,KAAMA,EACNM,UAAS,kBAAaA,GACtBD,YAAaA,EACbE,SAAUA,IAGZ,2BACEH,MAAOA,EACPF,SAAUA,EACVC,KAAMA,EACNH,KAAMA,EACNM,UAAS,iBAAYA,GACrBD,YAAaA,EACbE,SAAUA,IAGhB,OAAO,oCAAGC,IC2BGC,IAxDK,SAAC,GAYd,IAAD,IAXJC,gBAWI,MAXO,GAWP,MAVJC,gBAUI,MAVO,GAUP,EATJC,EASI,EATJA,cASI,IARJC,sBAQI,aAPJC,sBAOI,aANJC,iBAMI,MANQ,GAMR,EALJC,EAKI,EALJA,aACAC,EAII,EAJJA,SAII,IAHJC,uBAGI,MAHc,GAGd,MAFJC,mBAEI,aADJZ,gBACI,SACJ,OACE,yBAAKD,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,yBACZK,EACAE,IAAmBC,EAClB,yBAAKR,UAAU,qDACZM,GAED,OAGR,yBAAKN,UAAU,4BACb,kBAACc,EAAD,CACEd,UAAWO,IAAmBC,EAAiB,cAAgB,KAC/DV,MAAqB,OAAdW,EAAqB,GAAKA,EACjCb,SAAUc,EACVb,KAAMO,EACNV,KAAMiB,EACNZ,YAAaa,EACbjB,QAASkB,EACTZ,SAAUA,S,+JCDPc,EAlCK,SAAC,GAKd,IAJLb,EAII,EAJJA,OACAc,EAGI,EAHJA,kBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,qBAEA,OACE,yBACElB,WACyB,IAAvBiB,EACI,iCACA,gBAGN,kBAACE,EAAA,EAAD,CAAOtB,KAAK,sBACXK,EACD,yBAAKF,UAAU,6BACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,YACXC,YAAY,MACZC,cAAc,EACdC,cAAeN,IAEjB,kBAACE,EAAA,EAAD,CACEC,WAAW,iBACXC,YAAY,OACZC,cAAc,EACdC,cAAeR,O,QCOVS,EAlCQ,SAAC,GAKjB,IAJLvB,EAII,EAJJA,OACAwB,EAGI,EAHJA,0BACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,wBAEA,OACE,yBACE5B,WAC4B,IAA1B2B,EACI,iCACA,gBAGN,kBAACR,EAAA,EAAD,CAAOtB,KAAK,0BACXK,EACD,yBAAKF,UAAU,6BACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,YACXC,YAAY,MACZC,cAAc,EACdC,cAAeI,IAEjB,kBAACR,EAAA,EAAD,CACEC,WAAW,iBACXC,YAAY,OACZC,cAAc,EACdC,cAAeE,OC4BVG,EAtDO,SAAC,GAQhB,IAPLC,EAOI,EAPJA,qBACAC,EAMI,EANJA,wBACAC,EAKI,EALJA,UACAC,EAII,EAJJA,oBACAnC,EAGI,EAHJA,MACAoC,EAEI,EAFJA,uBACAC,EACI,EADJA,+BAEA,OACE,yBACEnC,UACE8B,EACI,qCACA,qBAGN,kBAACX,EAAA,EAAD,CAAOtB,KAAK,oBACZ,yBAAKG,UAAU,aACb,kBAAC,IAAD,CACEK,SAAS,mBACTC,cAAc,8BACdC,eAAgBwB,EAChBvB,eAAgBwB,EAChBtB,aAAcuB,EACdxB,UAAWX,EACXM,SAAS,WACTO,SAAS,WACTC,gBAAgB,GAChBC,YAAa,KACbZ,UAAU,KAGd,yBAAKD,UAAU,6BACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,eACXC,YAAY,QACZC,cAAc,EACdC,cAAeU,IAEjB,kBAACd,EAAA,EAAD,CACEC,WAAW,YACXC,YAAY,MACZC,cAAc,EACdC,cAEEW,O,ujBCtCNC,E,2MACJC,MAAQ,CACNC,UAAW,CACTC,MAAO,CACLzC,MAAO,GACPkC,WAAW,GAEbQ,SAAU,CACR1C,MAAO,GACPkC,UAAW,MAEbS,SAAU,CACR3C,MAAO,GACPkC,UAAW,OAGfU,aAAc,CACZD,SAAU,CACR3C,MAAO,GACPkC,UAAW,MAEbW,YAAa,CACX7C,MAAO,GACPkC,UAAW,MAEbY,iBAAkB,CAChB9C,MAAO,GACPkC,UAAW,OAGfa,kBAAmB,CACjBJ,SAAU,CACR3C,MAAO,GACPkC,UAAW,OAGfc,iBAAiB,EACjBC,oBAAoB,EACpBhB,yBAAyB,G,EAsE3BE,oBAAsB,SAAAe,GACpB,IAAMC,EAAO,KACR,EAAKZ,MAAMQ,mBAEVK,EAAiB,KAClBD,EAAQD,EAAEG,OAAOtD,OAEA,aAAlBmD,EAAEG,OAAOzD,MACXwD,EAAkBpD,MAAQkD,EAAEG,OAAOxD,QACnCuD,EAAkBlB,UAAYgB,EAAEG,OAAOxD,UAEvCuD,EAAkBpD,MAAQkD,EAAEG,OAAOrD,MACnCoD,EAAkBlB,UAAY,EAAKoB,cACjCF,EAAkBpD,MAClBoD,EAAkBlB,UAClBgB,EAAEG,OAAOtD,OAGboD,EAAQD,EAAEG,OAAOtD,MAAQqD,EAEzB,EAAKG,SAAS,CACZR,kBAAmBI,EACnBlB,yBAAyB,K,EAI7BuB,yBAA2B,SAAAN,GACzB,IAAMC,EAAO,KACR,EAAKZ,MAAMC,WAEVY,EAAiB,KAClBD,EAAQD,EAAEG,OAAOtD,OAEA,aAAlBmD,EAAEG,OAAOzD,MACXwD,EAAkBpD,MAAQkD,EAAEG,OAAOxD,QACnCuD,EAAkBlB,UAAYgB,EAAEG,OAAOxD,UAEvCuD,EAAkBpD,MAAQkD,EAAEG,OAAOrD,MACnCoD,EAAkBlB,UAAY,EAAKoB,cACjCF,EAAkBpD,MAClBoD,EAAkBlB,UAClBgB,EAAEG,OAAOtD,OAGboD,EAAQD,EAAEG,OAAOtD,MAAQqD,EAEzB,EAAKG,SAAS,CACZf,UAAWW,K,EAIfM,4BAA8B,SAAAP,GAC5B,IAAMC,EAAO,KACR,EAAKZ,MAAMK,cAEVQ,EAAiB,KAClBD,EAAQD,EAAEG,OAAOtD,OAEA,aAAlBmD,EAAEG,OAAOzD,MACXwD,EAAkBpD,MAAQkD,EAAEG,OAAOxD,QACnCuD,EAAkBlB,UAAYgB,EAAEG,OAAOxD,UAEvCuD,EAAkBpD,MAAQkD,EAAEG,OAAOrD,MACnCoD,EAAkBlB,UAAY,EAAKoB,cACjCF,EAAkBpD,MAClBoD,EAAkBlB,UAClBgB,EAAEG,OAAOtD,OAGboD,EAAQD,EAAEG,OAAOtD,MAAQqD,EAEzB,EAAKG,SAAS,CACZX,aAAcO,K,EAIlBd,+BAAiC,SAAAa,GAC/BA,EAAEQ,iBACF,IAAMC,GAAa,EAAKpB,MAAMN,yBAA0B,GAKxD,GAJA,EAAKsB,SAAS,CACZtB,wBAAyB0B,IAGvB,EAAKpB,MAAMQ,kBAAkBJ,SAAST,WAAayB,EAAY,CACjE,EAAKC,MAAMC,kBACT,EAAKD,MAAME,UACX,EAAKvB,MAAMQ,kBAAkBJ,SAAS3C,MACtC,EAAK4D,MAAMG,UACX,KACA,MAGF,IAAIZ,EAAO,KAAQ,EAAKZ,MAAMC,WAC9BW,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7B,EAAKqB,SAAS,CACZtB,yBAAyB,M,EAK/Bf,kBAAoB,SAAAgC,GAClBA,EAAEQ,iBACF,IAAMC,GAAa,EAAKpB,MAAMS,iBAAkB,GAKhD,GAJA,EAAKO,SAAS,CACZP,gBAAiBW,IAIjB,EAAKpB,MAAMC,UAAUE,SAASR,WAC9ByB,GACA,EAAKpB,MAAMC,UAAUG,SAAST,UAC9B,CAMA,EAAK0B,MAAMC,kBACT,EAAKD,MAAME,UACX,EAAKvB,MAAMC,UAAUG,SAAS3C,MAC9B,EAAK4D,MAAMG,UACX,EAAKxB,MAAMC,UAAUE,SAAS1C,MAC9B,MAGF,IAAImD,EAAO,KAAQ,EAAKZ,MAAMC,WAC9BW,EAAQT,SAAS1C,MAAQ,GACzBmD,EAAQT,SAASR,WAAY,EAC7BiB,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7B,EAAKqB,SAAS,CACZP,iBAAiB,M,EAKvBpB,0BAA4B,SAAAsB,GAC1BA,EAAEQ,iBACF,IAAMC,GAAa,EAAKpB,MAAMU,oBAAqB,GAKnD,GAJA,EAAKM,SAAS,CACZN,mBAAoBU,IAIpB,EAAKpB,MAAMK,aAAaD,SAAST,WACjCyB,GACA,EAAKpB,MAAMK,aAAaC,YAAYX,WACpC,EAAKK,MAAMK,aAAaE,iBAAiBZ,UACzC,CAMA,EAAK0B,MAAMC,kBACT,EAAKD,MAAME,UACX,EAAKvB,MAAMK,aAAaD,SAAS3C,MACjC,EAAK4D,MAAMG,UACX,KACA,EAAKxB,MAAMK,aAAaC,YAAY7C,OAGtC,IAAImD,EAAO,KAAQ,EAAKZ,MAAMK,cAC9BO,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7BiB,EAAQN,YAAY7C,MAAQ,GAC5BmD,EAAQN,YAAYX,WAAY,EAChCiB,EAAQL,iBAAiB9C,MAAQ,GACjCmD,EAAQL,iBAAiBZ,WAAY,EACrC,EAAKqB,SAAS,CACZN,oBAAoB,M,EAK1Be,mBAAqB,WACnB,EAAKJ,MAAMxC,uBACX,IAAI+B,EAAO,KAAQ,EAAKZ,MAAMC,WAC9BW,EAAQT,SAAS1C,MAAQ,GACzBmD,EAAQT,SAASR,WAAY,EAC7BiB,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7B,EAAKqB,SAAS,CACZP,iBAAiB,K,EAIrBiB,sBAAwB,WACtB,EAAKL,MAAM9B,0BACX,IAAIqB,EAAO,KAAQ,EAAKZ,MAAMK,cAC9BO,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7BiB,EAAQN,YAAY7C,MAAQ,GAC5BmD,EAAQN,YAAYX,WAAY,EAChCiB,EAAQL,iBAAiB9C,MAAQ,GACjCmD,EAAQL,iBAAiBZ,WAAY,EACrC,EAAKqB,SAAS,CACZN,oBAAoB,K,EAIxBiB,2BAA6B,WAC3B,EAAKN,MAAMxB,yBACX,IAAIe,EAAO,KAAQ,EAAKZ,MAAMQ,mBAC9BI,EAAQR,SAAS3C,MAAQ,GACzBmD,EAAQR,SAAST,WAAY,EAC7B,EAAKqB,SAAS,CACZtB,yBAAyB,K,qFAnRPkC,EAAWC,GAC/B,OAAID,IAAcE,KAAKT,OAASQ,IAAcC,KAAK9B,Q,oCA4CvCvC,EAAOkC,EAAWnC,GAC9B,IAAIuE,GAAU,EAad,GAXa,aAATvE,GAAgC,gBAATA,IACzBuE,EAAUtE,EAAMuE,QAAU,GAGf,qBAATxE,IACFuE,EACED,KAAK9B,MAAMK,aAAaC,YAAY7C,QAAUA,GAASA,EAAMuE,QAAU,GAK9D,aAATxE,EAAqB,CAEvBuE,EADgB,0IACEE,KAAKxE,IAAUqE,KAAKT,MAAME,YAAc9D,EAG5D,OAAOsE,I,+BAuNC,IAAD,SAC6BD,KAAK9B,MAAjCC,EADD,EACCA,UAAWI,EADZ,EACYA,aACb6B,EAAaJ,KAAKT,MAAMc,OAAS,kBAAC,IAAD,CAAUC,GAAG,MAAS,KACvDC,EAAmBP,KAAKT,MAAM3C,YAClC,kBAAC4D,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAK,qCACLgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAMqB,mBAAkB,MAGpD,kBAACJ,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAK,qCACLgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAMqB,mBAAkB,MAIhDC,EAAsBb,KAAKT,MAAMjC,eACrC,kBAACkD,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAK,+BACLgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAMuB,sBAAqB,MAGvD,kBAACN,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAK,+BACLgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAMuB,sBAAqB,MAInDC,EAAuBf,KAAKT,MAAMyB,gBACtC,kBAACR,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAI,2CACJgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAM0B,mBAAkB,MAGpD,kBAACT,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAI,2CACJgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAM0B,mBAAkB,MAIhDC,EAAmBlB,KAAKT,MAAM4B,YAClC,kBAACX,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAI,8BACJgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAM6B,cAAa,MAG/C,kBAACZ,EAAA,EAAD,CACEC,YAAY,EACZ/E,KAAI,8BACJgF,SAAS,EACTC,cAAe,kBAAM,EAAKpB,MAAM6B,cAAa,MAI3CC,EAAkB,CACtB,CACEC,GAAI,EACJpF,SAAU,yBACVC,cAAe,2BACfC,eAAgB4D,KAAK9B,MAAMS,gBAC3BtC,eAAgB8B,EAAUC,MAAMP,UAChCtB,aAAcyD,KAAKb,yBACnB7C,UAAW0D,KAAKT,MAAME,UACtBxD,SAAU,QACVO,SAAU,QACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,GAEZ,CACEwF,GAAI,EACJpF,SAAU,qBACVC,cAAe,4BACfC,eAAgB4D,KAAK9B,MAAMS,gBAC3BtC,eAAgB8B,EAAUE,SAASR,UACnCtB,aAAcyD,KAAKb,yBACnB7C,UAAW6B,EAAUE,SAAS1C,MAC9BM,SAAU,WACVO,SAAU,QACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,GAEZ,CACEwF,GAAI,EACJpF,SAAU,cACVC,cAAe,yBACfC,eAAgB4D,KAAK9B,MAAMS,gBAC3BtC,eAAgB8B,EAAUG,SAAST,UACnCtB,aAAcyD,KAAKb,yBACnB7C,UAAW6B,EAAUG,SAAS3C,MAC9BM,SAAU,WACVO,SAAU,WACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,IAIRyF,EAAqB,CACzB,CACED,GAAI,EACJpF,SAAU,uBACVC,cAAe,yBACfC,eAAgB4D,KAAK9B,MAAMU,mBAC3BvC,eAAgBkC,EAAaD,SAAST,UACtCtB,aAAcyD,KAAKZ,4BACnB9C,UAAWiC,EAAaD,SAAS3C,MACjCM,SAAU,WACVO,SAAU,WACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,GAEZ,CACEwF,GAAI,EACJpF,SAAU,mBACVC,cAAe,yBACfC,eAAgB4D,KAAK9B,MAAMU,mBAC3BvC,eAAgBkC,EAAaC,YAAYX,UACzCtB,aAAcyD,KAAKZ,4BACnB9C,UAAWiC,EAAaC,YAAY7C,MACpCM,SAAU,cACVO,SAAU,WACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,GAEZ,CACEwF,GAAI,EACJpF,SAAU,8BACVC,cAAe,yBACfC,eAAgB4D,KAAK9B,MAAMU,mBAC3BvC,eAAgBkC,EAAaE,iBAAiBZ,UAC9CtB,aAAcyD,KAAKZ,4BACnB9C,UAAWiC,EAAaE,iBAAiB9C,MACzCM,SAAU,mBACVO,SAAU,WACVC,gBAAiB,GACjBC,aAAa,EACbZ,UAAU,IAIR0F,EAAgBH,EAAgBI,IAAI,SAAAC,GAAI,OAC5C,kBAAC,IAAD,CACEC,IAAKD,EAAKJ,GACVpF,SAAUwF,EAAKxF,SACfC,cAAeuF,EAAKvF,cACpBC,eAAgBsF,EAAKtF,eACrBC,eAAgBqF,EAAKrF,eACrBE,aAAcmF,EAAKnF,aACnBD,UAAWoF,EAAKpF,UAChBL,SAAUyF,EAAKzF,SACfO,SAAUkF,EAAKlF,SACfC,gBAAiBiF,EAAKjF,gBACtBC,YAAagF,EAAKhF,YAClBZ,SAAU4F,EAAK5F,aAIb8F,EAAmBL,EAAmBE,IAAI,SAAAC,GAAI,OAClD,kBAAC,IAAD,CACEC,IAAKD,EAAKJ,GACVpF,SAAUwF,EAAKxF,SACfC,cAAeuF,EAAKvF,cACpBC,eAAgBsF,EAAKtF,eACrBC,eAAgBqF,EAAKrF,eACrBE,aAAcmF,EAAKnF,aACnBD,UAAWoF,EAAKpF,UAChBL,SAAUyF,EAAKzF,SACfO,SAAUkF,EAAKlF,SACfC,gBAAiBiF,EAAKjF,gBACtBC,YAAagF,EAAKhF,YAClBZ,SAAU4F,EAAK5F,aAInB,OACE,yBACED,UACEmE,KAAKT,MAAMsC,uBAAyB,mBAAqB,UAG1DzB,EACAG,EACAM,EACAE,EACAG,EAED,yBAAKrF,UAAU,8BACb,kBAAC,IAAD,CAAWiG,QAAS9B,KAAKT,MAAMwC,2BAC/B,yBACElG,WACoC,IAAlCmE,KAAKT,MAAMzC,qBAC0B,IAArCkD,KAAKT,MAAM/B,wBACyB,IAApCwC,KAAKT,MAAM5B,qBACP,iCACA,gBAGN,kBAACX,EAAA,EAAD,CAAOtB,KAAK,qBACZ,yBAAKG,UAAU,eACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,0BACXC,YAAY,OACZC,cAAc,EACdC,cAAe2C,KAAKT,MAAMxC,wBAG9B,yBAAKlB,UAAU,eACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,wBACXC,YAAY,OACZC,cAAc,EAIdC,cAAe,kBAAM,EAAKkC,MAAM9B,yBAAwB,OAG5D,yBAAK5B,UAAU,eACb,kBAACoB,EAAA,EAAD,CACEC,WAAW,kBACXC,YAAY,MACZC,cAAc,EACdC,cAAe2C,KAAKT,MAAMxB,4BAKlC,kBAAC,EAAD,CACEhC,OAAQyF,EACR3E,kBAAmBmD,KAAKnD,kBACxBC,mBAAoBkD,KAAKT,MAAMzC,mBAC/BC,qBAAsBiD,KAAKL,qBAE7B,kBAAC,EAAD,CACE5D,OAAQ6F,EACRrE,0BAA2ByC,KAAKzC,0BAChCC,sBAAuBwC,KAAKT,MAAM/B,sBAClCC,wBAAyBuC,KAAKJ,wBAEhC,kBAAC,EAAD,CACEjC,qBAAsBqC,KAAKT,MAAM5B,qBACjCC,wBAAyBoC,KAAK9B,MAAMN,wBACpCC,UAAWmC,KAAK9B,MAAMQ,kBAAkBJ,SAAST,UACjDC,oBAAqBkC,KAAKlC,oBAC1BnC,MAAOqE,KAAK9B,MAAMQ,kBAAkBJ,SAAS3C,MAC7CoC,uBAAwBiC,KAAKH,2BAC7B7B,+BAAgCgC,KAAKhC,qC,gDAthBb8B,EAAWkC,GACzC,IAAIC,EAAQ,KACPD,GAgCL,OA7BEC,EAAS1D,aAAaC,YAAY7C,MAAMuE,QAAU,GAClDJ,EAAUtC,wBAGRyE,EAAS1D,aAAaC,YAAY7C,QAClCsG,EAAS1D,aAAaE,iBAAiB9C,MAEvCsG,EAAS1D,aAAaE,iBAAiBZ,WAAY,EAEnDoE,EAAS1D,aAAaE,iBAAiBZ,WAAY,GAIrDoE,EAAS1D,aAAaC,YAAY7C,MAAMuE,QAAU,GAClD+B,EAAS1D,aAAaD,SAAS3C,MAAMuE,QAAU,GAC/CJ,EAAUtC,wBAGRyE,EAAS1D,aAAaD,SAAS3C,QAC/BsG,EAAS1D,aAAaC,YAAY7C,OAElCsG,EAAS1D,aAAaC,YAAYX,WAAY,EAC9CoE,EAAS1D,aAAaE,iBAAiBZ,WAAY,EACnDoE,EAAS1D,aAAaD,SAAST,WAAY,IAE3CoE,EAAS1D,aAAaC,YAAYX,WAAY,EAC9CoE,EAAS1D,aAAaD,SAAST,WAAY,IAGxCoE,M,GAnFSC,aAuoBLC,sBAzDS,SAAAjE,GACtB,MAAO,CACLmC,OAAQnC,EAAMmC,OACd+B,WAAYlE,EAAMkE,WAClBP,uBAAwB3D,EAAM2D,uBAC9BpC,UAAWvB,EAAMuB,UACjBC,UAAWxB,EAAMwB,UACjB2C,OAAQnE,EAAMmE,OACdvF,mBAAoBoB,EAAMpB,mBAC1Ba,qBAAsBO,EAAMP,qBAC5Bf,YAAasB,EAAMtB,YAEnBoE,gBAAiB9C,EAAM8C,gBACvBxD,sBAAuBU,EAAMV,sBAC7BF,eAAgBY,EAAMZ,eACtB6D,YAAajD,EAAMiD,cAII,SAAAmB,GACzB,MAAO,CACLC,OAAQ,SAACnE,EAAOE,EAAUkE,GAAlB,OACNF,EAASG,IAAiBrE,EAAOE,EAAUkE,KAC7CE,eAAgB,SAAA/G,GAAK,OAAI2G,EAASG,IAA2B9G,KAC7DoG,yBAA0B,kBACxBO,EAASG,SACXE,eAAgB,SAAAjD,GAAS,OACvB4C,EAASG,IAA2B/C,KACtCkD,sBAAuB,SAAAxE,GAAK,OAC1BkE,EAASG,KAAkCrE,KAC7CyE,aAAc,SAACR,EAAQhE,EAAUD,GAAnB,OACZkE,EAASG,IAAyBJ,EAAQhE,EAAUD,KACtDrB,qBAAsB,kBAAMuF,EAASG,QACrC1E,uBAAwB,kBACtBuE,EAASG,QACX7B,kBAAmB,SAAAjF,GAAK,OAAI2G,EAASG,IAA8B9G,KACnEmH,qBAAsB,SAAAnH,GAAK,OACzB2G,EAASG,IAAiC9G,KAC5CsF,kBAAmB,SAAAtF,GAAK,OAAI2G,EAASG,IAA8B9G,KACnE6D,kBAAmB,SAACpB,EAAOE,EAAUoB,EAAWrB,EAAUG,GAAvC,OACjB8D,EACEG,IACErE,EACAE,EACAoB,EACArB,EACAG,KAGNf,wBAAyB,kBACvB6E,EAASG,QACX3B,qBAAsB,SAAAnF,GAAK,OACzB2G,EAASG,IAAiC9G,KAC5CyF,aAAc,SAAAzF,GAAK,OAAI2G,EAASG,IAAyB9G,OAI9CwG,CAGblE","file":"static/js/4.f4953557.chunk.js","sourcesContent":["import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nconst changeEmail = ({\r\n  inputs,\r\n  handleOnClickSave,\r\n  changeEmailVisible,\r\n  change_email_visible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        changeEmailVisible === true\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <Title name=\"ZMIEŃ E-MAIL\" />\r\n      {inputs}\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Powrót\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={change_email_visible}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Zatwierdź\"\r\n          buttonColor=\"gray\"\r\n          buttonInline={true}\r\n          buttonOnClick={handleOnClickSave}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default changeEmail;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\n\r\nconst changePassword = ({\r\n  inputs,\r\n  handleOnClickSavePassword,\r\n  changePasswordVisible,\r\n  change_password_visible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        changePasswordVisible === true\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <Title name=\"ZMIEŃ HASŁO\" />\r\n      {inputs}\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Powrót\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={change_password_visible}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Zatwierdź\"\r\n          buttonColor=\"gray\"\r\n          buttonInline={true}\r\n          buttonOnClick={handleOnClickSavePassword}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default changePassword;\r\n","import React from \"react\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\n\r\nconst deleteAccount = ({\r\n  deleteAccountConfirm,\r\n  validationDeleteAccount,\r\n  validated,\r\n  handleInputOnChange,\r\n  value,\r\n  delete_account_confirm,\r\n  handleOnClickSaveDeleteAccount\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        deleteAccountConfirm\r\n          ? \"loginAccount loginAccountDown mt-3\"\r\n          : \"loginAccount mt-3\"\r\n      }\r\n    >\r\n      <Title name=\"USUŃ KONTO\" />\r\n      <div className=\"container\">\r\n        <FormElement\r\n          formName=\"Podaj hasło\"\r\n          itemFalseName=\"Błędne hasło\"\r\n          formValidation={validationDeleteAccount}\r\n          itemValidation={validated}\r\n          itemOnChange={handleInputOnChange}\r\n          itemValue={value}\r\n          itemName=\"password\"\r\n          itemType=\"password\"\r\n          itemPlaceholder=\"\"\r\n          itemChecked={null}\r\n          disabled={false}\r\n        />\r\n      </div>\r\n      <div className=\"text-center margin-top-40\">\r\n        <FormButton\r\n          buttonName=\"Wróć\"\r\n          buttonColor=\"green\"\r\n          buttonInline={true}\r\n          buttonOnClick={delete_account_confirm}\r\n        />\r\n        <FormButton\r\n          buttonName=\"Usuń\"\r\n          buttonColor=\"red\"\r\n          buttonInline={true}\r\n          buttonOnClick={\r\n            // this.props.delete_account(this.props.userToken)\r\n            handleOnClickSaveDeleteAccount\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default deleteAccount;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport ChangeEmail from \"./changeEmail\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport ChangePassword from \"./changePassword\";\r\nimport DeleteAccount from \"./deleteAccount\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formEmail: {\r\n      email: {\r\n        value: \"\",\r\n        validated: true\r\n      },\r\n      newEmail: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formPassword: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPassword: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      newPasswordAgain: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    formDeleteAccount: {\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    validationEmail: false,\r\n    validationPassword: false,\r\n    validationDeleteAccount: false\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = {\r\n      ...prevState\r\n    };\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.newPassword.value !==\r\n        newState.formPassword.newPasswordAgain.value\r\n      ) {\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n      } else {\r\n        newState.formPassword.newPasswordAgain.validated = true;\r\n      }\r\n    }\r\n    if (\r\n      newState.formPassword.newPassword.value.length >= 6 &&\r\n      newState.formPassword.password.value.length >= 6 &&\r\n      nextProps.changePasswordVisible\r\n    ) {\r\n      if (\r\n        newState.formPassword.password.value ===\r\n        newState.formPassword.newPassword.value\r\n      ) {\r\n        newState.formPassword.newPassword.validated = false;\r\n        newState.formPassword.newPasswordAgain.validated = false;\r\n        newState.formPassword.password.validated = false;\r\n      } else {\r\n        newState.formPassword.newPassword.validated = true;\r\n        newState.formPassword.password.validated = true;\r\n      }\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  checkValidity(value, validated, name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\" || name === \"newPassword\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"newPasswordAgain\") {\r\n      isValid =\r\n        this.state.formPassword.newPassword.value === value && value.length >= 6\r\n          ? true\r\n          : false;\r\n    }\r\n\r\n    if (name === \"newEmail\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && this.props.userEmail !== value;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.formDeleteAccount\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formDeleteAccount: newForm,\r\n      validationDeleteAccount: true\r\n    });\r\n  };\r\n\r\n  handleInputOnChangeEmail = e => {\r\n    const newForm = {\r\n      ...this.state.formEmail\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formEmail: newForm\r\n    });\r\n  };\r\n\r\n  handleInputOnChangePassword = e => {\r\n    const newForm = {\r\n      ...this.state.formPassword\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      formPassword: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSaveDeleteAccount = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationDeleteAccount ? true : true;\r\n    this.setState({\r\n      validationDeleteAccount: validation\r\n    });\r\n\r\n    if (this.state.formDeleteAccount.password.validated && validation) {\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formDeleteAccount.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationDeleteAccount: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationEmail ? true : true;\r\n    this.setState({\r\n      validationEmail: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formEmail.newEmail.validated &&\r\n      validation &&\r\n      this.state.formEmail.password.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formEmail.password.value,\r\n        this.props.userToken,\r\n        this.state.formEmail.newEmail.value,\r\n        null\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formEmail };\r\n      newForm.newEmail.value = \"\";\r\n      newForm.newEmail.validated = false;\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      this.setState({\r\n        validationEmail: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnClickSavePassword = e => {\r\n    e.preventDefault();\r\n    const validation = this.state.validationPassword ? true : true;\r\n    this.setState({\r\n      validationPassword: validation\r\n    });\r\n\r\n    if (\r\n      this.state.formPassword.password.validated &&\r\n      validation &&\r\n      this.state.formPassword.newPassword.validated &&\r\n      this.state.formPassword.newPasswordAgain.validated\r\n    ) {\r\n      // this.props.change_email(\r\n      //   this.props.userToken,\r\n      //   this.state.formEmail.newEmail.value,\r\n      //   this.props.userEmail\r\n      // );\r\n      this.props.authCheckPassword(\r\n        this.props.userEmail,\r\n        this.state.formPassword.password.value,\r\n        this.props.userToken,\r\n        null,\r\n        this.state.formPassword.newPassword.value\r\n      );\r\n      //?????????????????????????????????????????\r\n      let newForm = { ...this.state.formPassword };\r\n      newForm.password.value = \"\";\r\n      newForm.password.validated = false;\r\n      newForm.newPassword.value = \"\";\r\n      newForm.newPassword.validated = false;\r\n      newForm.newPasswordAgain.value = \"\";\r\n      newForm.newPasswordAgain.validated = false;\r\n      this.setState({\r\n        validationPassword: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEmailVisible = () => {\r\n    this.props.change_email_visible();\r\n    let newForm = { ...this.state.formEmail };\r\n    newForm.newEmail.value = \"\";\r\n    newForm.newEmail.validated = false;\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationEmail: false\r\n    });\r\n  };\r\n\r\n  handlePasswordVisible = () => {\r\n    this.props.change_password_visible();\r\n    let newForm = { ...this.state.formPassword };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    newForm.newPassword.value = \"\";\r\n    newForm.newPassword.validated = false;\r\n    newForm.newPasswordAgain.value = \"\";\r\n    newForm.newPasswordAgain.validated = false;\r\n    this.setState({\r\n      validationPassword: false\r\n    });\r\n  };\r\n\r\n  handleDeleteAccountVisible = () => {\r\n    this.props.delete_account_confirm();\r\n    let newForm = { ...this.state.formDeleteAccount };\r\n    newForm.password.value = \"\";\r\n    newForm.password.validated = false;\r\n    this.setState({\r\n      validationDeleteAccount: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formEmail, formPassword } = this.state;\r\n    const changePage = this.props.signed ? <Redirect to=\"/\" /> : null;\r\n    const modalChangeEmail = this.props.changeEmail ? (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Adres e-mail został zmieniony\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_bool(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangePassword = this.props.changePassword ? (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Haslo zostało zmienione\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_password_bool(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={false}\r\n        name=\"Haslo zostało zmienione\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_password_bool(false)}\r\n      />\r\n    );\r\n\r\n    const modalChangeEmailBusy = this.props.changeEmailBusy ? (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Podany adres e-mail jest juz zajęty`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.change_email_busy(false)}\r\n      />\r\n    );\r\n\r\n    const modalBadPassword = this.props.badPassword ? (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Błędne hasło`}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.bad_password(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        modalError={true}\r\n        name={`Błędne hasło`}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.bad_password(false)}\r\n      />\r\n    );\r\n\r\n    const formChangeEmail = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualny adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-mail\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.email.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: this.props.userEmail,\r\n        itemName: \"email\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: true\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowy adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny adres e-maila\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.newEmail.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.newEmail.value,\r\n        itemName: \"newEmail\",\r\n        itemType: \"email\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationEmail,\r\n        itemValidation: formEmail.password.validated,\r\n        itemOnChange: this.handleInputOnChangeEmail,\r\n        itemValue: formEmail.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formChangePassword = [\r\n      {\r\n        id: 1,\r\n        formName: \"Aktualne hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.password.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPassword.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPassword.value,\r\n        itemName: \"newPassword\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      },\r\n      {\r\n        id: 3,\r\n        formName: \"Powtórz nowe hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.state.validationPassword,\r\n        itemValidation: formPassword.newPasswordAgain.validated,\r\n        itemOnChange: this.handleInputOnChangePassword,\r\n        itemValue: formPassword.newPasswordAgain.value,\r\n        itemName: \"newPasswordAgain\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false,\r\n        disabled: false\r\n      }\r\n    ];\r\n\r\n    const formEmailsMap = formChangeEmail.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n\r\n    const formPasswordsMap = formChangePassword.map(item => (\r\n      <FormElement\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n        disabled={item.disabled}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.settingsAccountVisible ? \"login loginDown \" : \"login \"\r\n        }\r\n      >\r\n        {changePage}\r\n        {modalChangeEmail}\r\n        {modalChangePassword}\r\n        {modalChangeEmailBusy}\r\n        {modalBadPassword}\r\n\r\n        <div className=\"container positionRelative\">\r\n          <ClosePage onClick={this.props.settings_account_visible} />\r\n          <div\r\n            className={\r\n              this.props.changeEmailVisible === false &&\r\n              this.props.changePasswordVisible === false &&\r\n              this.props.deleteAccountConfirm === false\r\n                ? \"loginAccount loginAccountDown \"\r\n                : \"loginAccount\"\r\n            }\r\n          >\r\n            <Title name=\"USTAWIENIA KONTA\" />\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Zmień adres e-mail\"\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n                buttonOnClick={this.props.change_email_visible}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Zmień hasło\"\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n                // buttonOnClick={() =>\r\n                //   this.props.onAuth_Reset_Password(this.props.userEmail)\r\n                // }\r\n                buttonOnClick={() => this.props.change_password_visible(true)}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <FormButton\r\n                buttonName=\"Usuń konto\"\r\n                buttonColor=\"red\"\r\n                buttonInline={true}\r\n                buttonOnClick={this.props.delete_account_confirm}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ChangeEmail\r\n          inputs={formEmailsMap}\r\n          handleOnClickSave={this.handleOnClickSave}\r\n          changeEmailVisible={this.props.changeEmailVisible}\r\n          change_email_visible={this.handleEmailVisible}\r\n        />\r\n        <ChangePassword\r\n          inputs={formPasswordsMap}\r\n          handleOnClickSavePassword={this.handleOnClickSavePassword}\r\n          changePasswordVisible={this.props.changePasswordVisible}\r\n          change_password_visible={this.handlePasswordVisible}\r\n        />\r\n        <DeleteAccount\r\n          deleteAccountConfirm={this.props.deleteAccountConfirm}\r\n          validationDeleteAccount={this.state.validationDeleteAccount}\r\n          validated={this.state.formDeleteAccount.password.validated}\r\n          handleInputOnChange={this.handleInputOnChange}\r\n          value={this.state.formDeleteAccount.password.value}\r\n          delete_account_confirm={this.handleDeleteAccountVisible}\r\n          handleOnClickSaveDeleteAccount={this.handleOnClickSaveDeleteAccount}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    signed: state.signed,\r\n    errorLogin: state.errorLogin,\r\n    settingsAccountVisible: state.settingsAccountVisible,\r\n    userEmail: state.userEmail,\r\n    userToken: state.userToken,\r\n    userId: state.userId,\r\n    changeEmailVisible: state.changeEmailVisible,\r\n    deleteAccountConfirm: state.deleteAccountConfirm,\r\n    changeEmail: state.changeEmail,\r\n    // errorResetPassword: state.errorResetPassword,\r\n    changeEmailBusy: state.changeEmailBusy,\r\n    changePasswordVisible: state.changePasswordVisible,\r\n    changePassword: state.changePassword,\r\n    badPassword: state.badPassword\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    is_error_login: value => dispatch(actionTypes.is_error_login(value)),\r\n    settings_account_visible: () =>\r\n      dispatch(actionTypes.settings_account_visible()),\r\n    delete_account: userToken =>\r\n      dispatch(actionTypes.delete_account(userToken)),\r\n    onAuth_Reset_Password: email =>\r\n      dispatch(actionTypes.onAuth_Reset_Password(email)),\r\n    change_email: (userId, newEmail, email) =>\r\n      dispatch(actionTypes.change_email(userId, newEmail, email)),\r\n    change_email_visible: () => dispatch(actionTypes.change_email_visible()),\r\n    delete_account_confirm: () =>\r\n      dispatch(actionTypes.delete_account_confirm()),\r\n    change_email_bool: value => dispatch(actionTypes.change_email_bool(value)),\r\n    error_reset_password: value =>\r\n      dispatch(actionTypes.error_reset_password(value)),\r\n    change_email_busy: value => dispatch(actionTypes.change_email_busy(value)),\r\n    authCheckPassword: (email, password, userToken, newEmail, newPassword) =>\r\n      dispatch(\r\n        actionTypes.authCheckPassword(\r\n          email,\r\n          password,\r\n          userToken,\r\n          newEmail,\r\n          newPassword\r\n        )\r\n      ),\r\n    change_password_visible: () =>\r\n      dispatch(actionTypes.change_password_visible()),\r\n    change_password_bool: value =>\r\n      dispatch(actionTypes.change_password_bool(value)),\r\n    bad_password: value => dispatch(actionTypes.bad_password(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n"],"sourceRoot":""}