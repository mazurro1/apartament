{"version":3,"sources":["elements/Input/Input.js","elements/formElement/formElement.js","component/loginAccount.js","component/resetPassword.js","component/login.js"],"names":["input","_ref","type","checked","onChange","name","value","placeholder","className","disabled","inputs","react_default","a","createElement","concat","Fragment","formElement","_ref$itemName","itemName","_ref$formName","formName","itemFalseName","_ref$formValidation","formValidation","_ref$itemValidation","itemValidation","_ref$itemValue","itemValue","itemOnChange","itemType","_ref$itemPlaceholder","itemPlaceholder","_ref$itemChecked","itemChecked","_ref$disabled","Input","loginAccount","handleResetPassword","handleOnClickSave","resetPasswordVisible","Title","FormButton","buttonName","buttonOnClick","buttonColor","buttonInline","resetPassword","reset_password_visible","resetPasswordValidation","handleInputOnChangePassword","handleOnClickResetPassword","email","validated","Login","state","form","password","handleInputOnChange","e","newForm","Object","objectSpread","_this","updateFormElement","target","checkValidity","setState","preventDefault","props","login_validation_change","onAuth","onAuth_Reset_Password","nextProps","nextState","this","isValid","length","test","_this2","changePage","signed","react_router","to","errorMessage","errorLogin","Modal","modalOn","onClickButton","is_error_login","modalNewAccount","newAccount","modalError","is_newAccount","formInputsMap","id","loginValidation","map","item","key","loginVisible","errorResetPassword","error_reset_password","closePage","onClick","login_visible","component_loginAccount","component_resetPassword","Component","connect","login","errorNetwork","dispatch","isSignUp","actionTypes","error_network"],"mappings":"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","file":"static/js/5.4ad8465e.chunk.js","sourcesContent":["import React from \"react\";\r\nconst input = ({\r\n  type,\r\n  checked,\r\n  onChange,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  className,\r\n  disabled\r\n}) => {\r\n  const inputs =\r\n    type === \"checkbox\" ? (\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button2 ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    ) : (\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className={`button ${className}`}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n      />\r\n    );\r\n  return <>{inputs}</>;\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Input from \"../Input/Input\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst formElement = ({\r\n  itemName = \"\",\r\n  formName = \"\",\r\n  itemFalseName,\r\n  formValidation = true,\r\n  itemValidation = false,\r\n  itemValue = \"\",\r\n  itemOnChange,\r\n  itemType,\r\n  itemPlaceholder = \"\",\r\n  itemChecked = false,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-2 offset-md-3 col-md-3 col-12\">\r\n          <div className=\"positionTop animation\">\r\n            {formName}\r\n            {formValidation && !itemValidation ? (\r\n              <div className=\"font-12 text-danger font-weight-bold mb-1 mb-md-0\">\r\n                {itemFalseName}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-12\">\r\n          <Input\r\n            className={formValidation && !itemValidation ? \"formInvalid\" : null}\r\n            value={itemValue === null ? \"\" : itemValue}\r\n            onChange={itemOnChange}\r\n            name={itemName}\r\n            type={itemType}\r\n            placeholder={itemPlaceholder}\r\n            checked={itemChecked}\r\n            disabled={disabled}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nformElement.propTypes = {\r\n  itemName: PropTypes.string,\r\n  formName: PropTypes.string,\r\n  itemFalseName: PropTypes.string,\r\n  formValidation: PropTypes.bool,\r\n  itemValidation: PropTypes.bool,\r\n  itemValue: PropTypes.any,\r\n  itemOnChange: PropTypes.func.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  itemPlaceholder: PropTypes.string,\r\n  itemChecked: PropTypes.any\r\n};\r\n\r\nexport default formElement;\r\n","import React from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nconst loginAccount = ({\r\n  inputs,\r\n  handleResetPassword,\r\n  handleOnClickSave,\r\n  resetPasswordVisible\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        resetPasswordVisible === false\r\n          ? \"loginAccount loginAccountDown \"\r\n          : \"loginAccount\"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <Title name=\"LOGOWANIE\" />\r\n        {inputs}\r\n\r\n        <div className=\"row margin-top-40\">\r\n          <div className=\"col-12\">\r\n            <div className=\"text-center \">\r\n              <FormButton\r\n                buttonName=\"Odzyskaj hasło\"\r\n                buttonOnClick={handleResetPassword}\r\n                buttonColor=\"red\"\r\n                buttonInline={true}\r\n              />\r\n              <FormButton\r\n                buttonName=\"Zaloguj\"\r\n                buttonOnClick={handleOnClickSave}\r\n                buttonColor=\"gray\"\r\n                buttonInline={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default loginAccount;\r\n","import React from \"react\";\r\nimport Title from \"../elements/Title/Title\";\r\nimport FormElement from \"../elements/formElement/formElement\";\r\nimport FormButton from \"../elements/formButton/FormButton\";\r\n\r\nconst resetPassword = ({\r\n  resetPasswordVisible,\r\n  reset_password_visible,\r\n  resetPassword,\r\n  resetPasswordValidation,\r\n  handleInputOnChangePassword,\r\n  handleOnClickResetPassword\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        resetPasswordVisible === true\r\n          ? \"resetPassword resetPasswordDown\"\r\n          : \"loginAccount \"\r\n      }\r\n    >\r\n      <div className=\"container\">\r\n        <Title name=\"ODZYSKIWANIE HASŁA\" />\r\n        <FormElement\r\n          formName=\"Twój adres e-mail\"\r\n          itemFalseName=\"Nie poprawny e-mail\"\r\n          formValidation={resetPasswordValidation}\r\n          itemValidation={resetPassword.email.validated}\r\n          itemOnChange={handleInputOnChangePassword}\r\n          itemValue={resetPassword.email.value}\r\n          itemName=\"email\"\r\n          itemType=\"email\"\r\n          itemPlaceholder=\"\"\r\n        />\r\n\r\n        <div className=\"text-center margin-top-40\">\r\n          <FormButton\r\n            buttonName=\"Powrót\"\r\n            buttonColor=\"red\"\r\n            buttonInline={true}\r\n            buttonOnClick={reset_password_visible}\r\n          />\r\n          <FormButton\r\n            buttonName=\"Wyślij\"\r\n            buttonColor=\"gray\"\r\n            buttonInline={true}\r\n            buttonOnClick={handleOnClickResetPassword}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default resetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../elements/Modal/Modal\";\r\nimport ClosePage from \"../elements/closePage/closePage\";\r\nimport FormItem from \"../elements/formElement/formElement\";\r\nimport LoginAccount from \"./loginAccount\";\r\nimport ResetPassword from \"./resetPassword\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    form: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    resetPassword: {\r\n      email: {\r\n        value: \"\",\r\n        validated: null\r\n      }\r\n    },\r\n    resetPasswordValidation: false\r\n    // validation: false\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps !== this.props || nextState !== this.state) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkValidity(value, validated, name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"password\") {\r\n      isValid = value.length >= 6 ? true : false;\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value);\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  handleInputOnChange = e => {\r\n    const newForm = {\r\n      ...this.state.form\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      form: newForm\r\n    });\r\n  };\r\n\r\n  handleInputOnChangePassword = e => {\r\n    const newForm = {\r\n      ...this.state.resetPassword\r\n    };\r\n    const updateFormElement = {\r\n      ...newForm[e.target.name]\r\n    };\r\n    if (e.target.type === \"checkbox\") {\r\n      updateFormElement.value = e.target.checked;\r\n      updateFormElement.validated = e.target.checked;\r\n    } else {\r\n      updateFormElement.value = e.target.value;\r\n      updateFormElement.validated = this.checkValidity(\r\n        updateFormElement.value,\r\n        updateFormElement.validated,\r\n        e.target.name\r\n      );\r\n    }\r\n    newForm[e.target.name] = updateFormElement;\r\n\r\n    this.setState({\r\n      resetPassword: newForm\r\n    });\r\n  };\r\n\r\n  handleOnClickSave = e => {\r\n    e.preventDefault();\r\n    this.props.login_validation_change(true);\r\n\r\n    if (this.state.form.email.validated && this.state.form.password.validated) {\r\n      this.props.onAuth(\r\n        this.state.form.email.value,\r\n        this.state.form.password.value,\r\n        false\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOnClickResetPassword = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      resetPasswordValidation: true\r\n    });\r\n    if (this.state.resetPassword.email.validated) {\r\n      this.props.onAuth_Reset_Password(this.state.resetPassword.email.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.state;\r\n    const changePage = this.props.signed ? <Redirect to=\"/\" /> : null;\r\n    const errorMessage = this.props.errorLogin ? (\r\n      <Modal\r\n        name=\"Zły login lub hasło.\"\r\n        modalOn={true}\r\n        onClickButton={() => this.props.is_error_login(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Zły login lub hasło.\"\r\n        modalOn={false}\r\n        onClickButton={() => this.props.is_error_login(false)}\r\n      />\r\n    );\r\n\r\n    const modalNewAccount = this.props.newAccount ? (\r\n      <Modal\r\n        name=\"Nowe konto zostało utworzone\"\r\n        modalError={false}\r\n        modalOn={true}\r\n        onClickButton={() => this.props.is_newAccount(false)}\r\n      />\r\n    ) : (\r\n      <Modal\r\n        name=\"Nowe konto zostało utworzone\"\r\n        modalError={false}\r\n        modalOn={false}\r\n        onClickButton={() => this.props.is_newAccount(false)}\r\n      />\r\n    );\r\n\r\n    const modalErrorEmail = () => {\r\n      if (this.props.errorResetPassword === true) {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={true}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      } else if (this.props.errorResetPassword === false) {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={true}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Modal\r\n              modalError={false}\r\n              name=\"Wiadomosć została wysłana na podany adres e-mail\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n            <Modal\r\n              name=\"Podany e-mail nie istnieje\"\r\n              modalOn={false}\r\n              onClickButton={() => this.props.error_reset_password(null)}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    const formInputs = [\r\n      {\r\n        id: 1,\r\n        formName: \"Adres e-mail:\",\r\n        itemFalseName: \"Niepoprawny e-mail\",\r\n        formValidation: this.props.loginValidation,\r\n        itemValidation: form.email.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.email.value,\r\n        itemName: \"email\",\r\n        itemType: \"text\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      },\r\n      {\r\n        id: 2,\r\n        formName: \"Hasło:\",\r\n        itemFalseName: \"Niepoprawne hasło\",\r\n        formValidation: this.props.loginValidation,\r\n        itemValidation: form.password.validated,\r\n        itemOnChange: this.handleInputOnChange,\r\n        itemValue: form.password.value,\r\n        itemName: \"password\",\r\n        itemType: \"password\",\r\n        itemPlaceholder: \"\",\r\n        itemChecked: false\r\n      }\r\n    ];\r\n\r\n    const formInputsMap = formInputs.map(item => (\r\n      <FormItem\r\n        key={item.id}\r\n        formName={item.formName}\r\n        itemFalseName={item.itemFalseName}\r\n        formValidation={item.formValidation}\r\n        itemValidation={item.itemValidation}\r\n        itemOnChange={item.itemOnChange}\r\n        itemValue={item.itemValue}\r\n        itemName={item.itemName}\r\n        itemType={item.itemType}\r\n        itemPlaceholder={item.itemPlaceholder}\r\n        itemChecked={item.itemChecked}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className={this.props.loginVisible ? \"login loginDown\" : \"login\"}>\r\n        {modalErrorEmail()}\r\n        {changePage}\r\n        {errorMessage}\r\n        {modalNewAccount}\r\n\r\n        <div className=\"container positionRelative \">\r\n          <ClosePage onClick={this.props.login_visible} />\r\n          <LoginAccount\r\n            inputs={formInputsMap}\r\n            handleResetPassword={this.props.reset_password_visible}\r\n            handleOnClickSave={this.handleOnClickSave}\r\n            resetPasswordVisible={this.props.resetPasswordVisible}\r\n          />\r\n\r\n          <ResetPassword\r\n            resetPasswordVisible={this.props.resetPasswordVisible}\r\n            reset_password_visible={this.props.reset_password_visible}\r\n            resetPasswordValidation={this.state.resetPasswordValidation}\r\n            resetPassword={this.state.resetPassword}\r\n            handleInputOnChangePassword={this.handleInputOnChangePassword}\r\n            handleOnClickResetPassword={this.handleOnClickResetPassword}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    login: state.login,\r\n    signed: state.signed,\r\n    errorLogin: state.errorLogin,\r\n    loginVisible: state.loginVisible,\r\n    errorNetwork: state.errorNetwork,\r\n    resetPasswordVisible: state.resetPasswordVisible,\r\n    errorResetPassword: state.errorResetPassword,\r\n    loginValidation: state.loginValidation,\r\n    newAccount: state.newAccount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) =>\r\n      dispatch(actionTypes.auth(email, password, isSignUp)),\r\n    is_error_login: value => dispatch(actionTypes.is_error_login(value)),\r\n    login_visible: () => dispatch(actionTypes.login_visible()),\r\n    error_network: value => dispatch(actionTypes.error_network(value)),\r\n    reset_password_visible: () =>\r\n      dispatch(actionTypes.reset_password_visible()),\r\n    onAuth_Reset_Password: email =>\r\n      dispatch(actionTypes.onAuth_Reset_Password(email)),\r\n    error_reset_password: value =>\r\n      dispatch(actionTypes.error_reset_password(value)),\r\n    login_validation_change: value =>\r\n      dispatch(actionTypes.login_validation_change(value))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n"],"sourceRoot":""}